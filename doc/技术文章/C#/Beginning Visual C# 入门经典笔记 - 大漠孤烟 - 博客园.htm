<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://www.cnblogs.com/zhanghuabin/articles/1186198.html -->
<HTML><HEAD><TITLE>Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content=.net技术,Beginning,Visual,C#,入门经典笔记 name=keywords><LINK 
href="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/common.css" type=text/css 
rel=stylesheet><LINK id=MainCss 
href="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/style.css" type=text/css 
rel=stylesheet><LINK 
href="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/common2.css" type=text/css 
rel=stylesheet><LINK 
href="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/shCore.css" type=text/css 
rel=stylesheet><LINK 
href="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/shThemeDefault.css" 
type=text/css rel=stylesheet><LINK title=RSS 
href="http://www.cnblogs.com/zhanghuabin/rss" type=application/rss+xml 
rel=alternate><LINK title=RSD href="http://www.cnblogs.com/zhanghuabin/rsd.xml" 
type=application/rsd+xml rel=EditURI>
<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/jquery.js" 
type=text/javascript></SCRIPT>

<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/common.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/jquery.json-2.2.min.js" 
type=text/javascript></SCRIPT>

<META content="MSHTML 6.00.3790.4672" name=GENERATOR></HEAD>
<BODY>
<FORM id=Form1 name=Form1 action=1186198.html method=post>
<DIV><INPUT id=__EVENTTARGET type=hidden name=__EVENTTARGET> <INPUT 
id=__EVENTARGUMENT type=hidden name=__EVENTARGUMENT> <INPUT 
id="&#13;&#10;__VIEWSTATE" type=hidden name=__VIEWSTATE> </DIV>
<SCRIPT type=text/javascript>
//<![CDATA[
var theForm = document.forms['Form1'];
if (!theForm) {
    theForm = document.Form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</SCRIPT>
<!--done-->
<DIV id=banner>
<DIV id=bnr_pic><!--done-->
<DIV class=header>
<DIV class=headerText><A class=headermaintitle id=Header1_HeaderTitle 
href="http://www.cnblogs.com/zhanghuabin/">大漠孤烟</A><BR></DIV><BR>
<DIV class=headerDis>大漠孤烟直，长河落日圆… </DIV></DIV></DIV></DIV>
<DIV id=main><!-- left starts -->
<DIV id=left>
<DIV id=mystats><BR><!--done-->
<DIV class=blogStats>随笔 - 1&nbsp; 文章 - 1&nbsp; 评论 - 7&nbsp; </DIV></DIV>
<DIV id=mylinks><!--done--><A class=menu id=MyLinks1_HomeLink 
href="http://www.cnblogs.com/">博客园</A>&nbsp;&nbsp;<A class=menu 
id=MyLinks1_MyHomeLink 
href="http://www.cnblogs.com/zhanghuabin/">首页</A>&nbsp;&nbsp;<A class=menu 
id=MyLinks1_NewPostLink 
href="http://www.cnblogs.com/zhanghuabin/admin/EditPosts.aspx?opt=1">新随笔</A>&nbsp;&nbsp;<A 
class=menu id=MyLinks1_ContactLink accessKey=9 
href="http://space.cnblogs.com/msg/send/å¼&nbsp;åæ">联系</A>&nbsp;&nbsp;<A 
class=menu id=MyLinks1_Admin 
href="http://www.cnblogs.com/zhanghuabin/admin/EditPosts.aspx">管理</A>&nbsp;&nbsp;<A 
class=menu id=MyLinks1_Syndication 
href="http://www.cnblogs.com/zhanghuabin/rss">订阅</A>&nbsp;<A id=MyLinks1_XMLLink 
href="http://www.cnblogs.com/zhanghuabin/rss"><IMG 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
alt=订阅 src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/xml.gif"></A></DIV>
<DIV id=topics>
<DIV class=post>
<DIV class=postTitle>
<H1><A class=postTitle2 id=ctl04_TitleUrl 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html">Beginning Visual 
C# 入门经典笔记</A></H1></DIV>&nbsp;&nbsp;<STRONG>&nbsp;</STRONG> 
<P style="TEXT-ALIGN: center" align=center><STRONG><SPAN 
style="FONT-SIZE: 15pt">Beginning Visual C# 2005</SPAN></STRONG></P>
<P style="TEXT-ALIGN: center" align=center><STRONG><SPAN 
style="FONT-SIZE: 15pt">C# </SPAN></STRONG><STRONG><SPAN 
style="FONT-SIZE: 15pt; FONT-FAMILY: 宋体">入门经典</SPAN></STRONG></P>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-FAMILY: 宋体">（学习笔记）</SPAN></P><SPAN 
style="FONT-SIZE: 10.5pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P 
style="MARGIN-LEFT: 37.5pt; TEXT-INDENT: -37.5pt; TEXT-ALIGN: center; tab-stops: list 37.5pt" 
align=center><SPAN style="FONT-SIZE: 9pt">第一章<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">C# </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">简介</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">CTS</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">Common Type System</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）通用类型系统；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">CLR</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">Common Language Runtime</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）公共语言运行库，它负责管理用</SPAN><SPAN 
style="FONT-SIZE: 9pt">.net</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">库开发所有应用程序的执行，其方式是管理内存、外理安全性，以及允许进行跨语言调试等；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">MSIL(Microsoft Intermediate 
Language)Microsoft </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中间语言；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">JIT</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">Just-In-Time</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）即时编译器：负责把</SPAN><SPAN 
style="FONT-SIZE: 9pt">MSIL</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编译为专用</SPAN><SPAN 
style="FONT-SIZE: 9pt">OS</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和目标机器结构的本机代码。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">元数据（即程序集中包含的数据的信息，也称元信息）；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">GAC</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">Global Assembly Cache</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）全局程序集高速缓存，把代码放在这个高速缓存中是很简单的，只需把包含代码的程序集放在包含该高速缓存的目录下即可；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">.net</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">垃圾回收会频繁检查计算机内存，从中删除不再需要的内容。它没有设置时间帧，可能一秒内会进行上千次的检查，也可能几秒钟检查一次，或者随时进行检查，但可以肯定进行了检查；</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第三章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量和表达式</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">基本的变量命名规则如下：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>1.</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量名的第一个字符必是字母、下划线（</SPAN><SPAN 
style="FONT-SIZE: 9pt">_</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）或</SPAN><SPAN 
style="FONT-SIZE: 9pt">@</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">；</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>2.</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">其后的字符可以是字母、下划线名数字。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">实际上，可以使用的变量类型是无限多的。其原因是可以自己定义类型，存储各种复杂的数据；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">注意组成</SPAN><SPAN 
style="FONT-SIZE: 9pt">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的字符数是没有上限的，因为它可以使用可变大小的内存；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">char </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量实际上存储的是数字，所以把两个</SPAN><SPAN 
style="FONT-SIZE: 9pt">char</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量加在一起会得到一个数字（其类型为</SPAN><SPAN 
style="FONT-SIZE: 9pt">int</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">逐字字符串必须转义双引号，以避免结束字符串。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">练习：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在下面的代码中，如何引用命名空间</SPAN><SPAN 
style="FONT-SIZE: 9pt">Smashing</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中的名称</SPAN><SPAN 
style="FONT-SIZE: 9pt">great?<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">namespace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> fabulous</SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: red">1.Super.smashing.great;</SPAN></SPAN></STRONG></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//Code in fabulous namespace;</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">namespace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> super</SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; <STRONG><SPAN 
style="COLOR: red">2.Smashing.great;</SPAN></STRONG></SPAN></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">namespace</SPAN> smashing</SPAN></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<STRONG><SPAN style="COLOR: red">&nbsp;&nbsp;&nbsp; 
3.Great;</SPAN></STRONG></SPAN></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: green">//great 
name defined;</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 10.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 31.5pt; TEXT-INDENT: 10.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">下面那些不是合法的变量：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>myVariablesIsGood<BR>99Flake<BR>_floor<BR>time2GetJiggyWidit<BR>wrox.com<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">解：不是合法的变量有：</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">99Flake(</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">不能以数字开头</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">)</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">wrox.com</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">（不能存“</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">.</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">”字符）</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">字符串</SPAN><SPAN 
style="FONT-SIZE: 9pt">supercalifragilisticexpialidocious</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">是因为太长了而不能放在</SPAN><SPAN 
style="FONT-SIZE: 9pt">stirng</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量中吗？为什么？</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">答：此描术是错误的，</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">C#</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">规定组</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">stirng</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">的字符数组没有上限，因为它可以使用可变大小的内存。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">考虑运算符的优先级，列出下述表达式的计算步骤：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>resultVar += var1 * var2 + var3 % var4 / 
var5;<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">解答：等价于</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red"> resultVar = resultVar+((var1 * var2) + 
((var3 % var4) / var5));</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">e)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个控制台应用程序，要求用户输入</SPAN><SPAN 
style="FONT-SIZE: 9pt">4</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">个</SPAN><SPAN 
style="FONT-SIZE: 9pt">int</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">值，并显示它们的乘积。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>&nbsp;&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">//</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">定义整形数组，用于存放输入值；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">int</SPAN>[] inputNamber = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: blue">int</SPAN>[4];</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">开如输入值；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: #2b91af">Console</SPAN>.Write(<SPAN 
style="COLOR: #a31515">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: #a31515; FONT-FAMILY: 新宋体">请输入第一个数的值："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputNamber[0] = <SPAN style="COLOR: #2b91af">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: #2b91af">Console</SPAN>.ReadLine().Trim());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: #2b91af">Console</SPAN>.Write(<SPAN 
style="COLOR: #a31515">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: #a31515; FONT-FAMILY: 新宋体">请输入第二个数的值："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputNamber[1] = <SPAN style="COLOR: #2b91af">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: #2b91af">Console</SPAN>.ReadLine().Trim());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: #2b91af">Console</SPAN>.Write(<SPAN 
style="COLOR: #a31515">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: #a31515; FONT-FAMILY: 新宋体">请输入第三个数的值："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputNamber[2] = <SPAN style="COLOR: #2b91af">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: #2b91af">Console</SPAN>.ReadLine().Trim());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: #2b91af">Console</SPAN>.Write(<SPAN 
style="COLOR: #a31515">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: #a31515; FONT-FAMILY: 新宋体">请输入第四个数的值："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputNamber[3] = <SPAN style="COLOR: #2b91af">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: #2b91af">Console</SPAN>.ReadLine().Trim());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">输出结果；</SPAN></P>
<P style="MARGIN-LEFT: 129pt; TEXT-INDENT: -108pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: #2b91af">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: #a31515">"{0}*{1}*{2}*{3} = {4}"</SPAN>, 
inputNamber[0],</SPAN></P>
<P style="MARGIN-LEFT: 125.9pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">inputNamber[1],</SPAN></P>
<P style="MARGIN-LEFT: 125.9pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">inputNamber[2],</SPAN></P>
<P style="MARGIN-LEFT: 125.9pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">inputNamber[3],</SPAN></P>
<P style="MARGIN-LEFT: 125.9pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">(inputNamber[0] * 
inputNamber[1] * inputNamber[2] * inputNamber[3]));</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;<SPAN 
style="COLOR: #2b91af">Console</SPAN>.ReadLine();</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR><BR><BR></SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第四章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">流程控制</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">goto</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">语句，优点：这是控制什么时候执行哪能些代码的一种非常简单的方式。缺点：过多地使用这个技巧将很难读懂代码。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如果</SPAN><SPAN 
style="FONT-SIZE: 9pt">&amp;&amp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">运算符的第一个操作数是</SPAN><SPAN 
style="FONT-SIZE: 9pt">false</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，就不需要考虑第二个操作数了，因为无论第二个操作数的值是什么，其结果都是</SPAN><SPAN 
style="FONT-SIZE: 9pt">false</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。同样，如果第一个操作数是</SPAN><SPAN 
style="FONT-SIZE: 9pt">true</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，</SPAN><SPAN style="FONT-SIZE: 9pt">|| 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">运算符就返回</SPAN><SPAN 
style="FONT-SIZE: 9pt">true</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，无需考虑第二操作数。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">但</SPAN><SPAN 
style="FONT-SIZE: 9pt">&amp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">与</SPAN><SPAN style="FONT-SIZE: 9pt"> | 
</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">却不是这样的。它们的操作总是要计算的。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">因为操作数的计算是有条件的，如果使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">&amp;&amp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> || 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">运算符来代替</SPAN><SPAN 
style="FONT-SIZE: 9pt">&amp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt">| 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，性能会有一定的提高；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">练习：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><STRONG><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如果有两个整数存储在变量</SPAN><SPAN 
style="FONT-SIZE: 9pt">var1</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">var2 </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中，该进行怎么样的布尔测试，看看其中的一个（但不是两个）是否大于</SPAN><SPAN 
style="FONT-SIZE: 9pt">10?<BR></SPAN><STRONG><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">解答：</SPAN></STRONG><STRONG><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">var1&gt;10 || var2 
&gt;10;</SPAN></STRONG></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个应用程序，其中包含上题中的逻辑，让用户输入两个数字，并显示它们，但拒绝接受两个数字都大于</SPAN><SPAN 
style="FONT-SIZE: 9pt">10</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的情况，并要求用户重新输入。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">int</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> number1 = 0;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">int</SPAN> number2 = 0;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">while</SPAN> (<SPAN 
style="COLOR: blue">true</SPAN>)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入两个数字，有且只能有一个大于10"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.Write(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入第一个数："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">); </SPAN></P>
<P style="TEXT-INDENT: 72pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">number1 = <SPAN 
style="COLOR: teal">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: teal">Console</SPAN>.ReadLine());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.Write(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入第二个数："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">); </SPAN></P>
<P style="TEXT-INDENT: 72pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">number2 = <SPAN 
style="COLOR: teal">Convert</SPAN>.ToInt32(<SPAN 
style="COLOR: teal">Console</SPAN>.ReadLine());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (number1 &gt; 10 || number2 &gt; 
10)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">第一个为：{0}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">, number1);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">第二个为：{0}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">, number2);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">break</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">else</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">输入的数字无法满足条件,按任意键重新输入"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">下载面的代码有什么错误：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>int i;<BR>for ( i = 1; I &lt;=10; 
i++)<BR><BR>&nbsp;&nbsp;&nbsp; if ( ( i % 2 )=0) <SPAN 
style="COLOR: red">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">错误应改为：</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">if ( ( i % 2 ) == 0)<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
continue;<BR>&nbsp;&nbsp;&nbsp; Console.WriteLine( i );<BR>} </SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第五章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量的更多内容</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">bool</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">各</SPAN><SPAN 
style="FONT-SIZE: 9pt">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">没有隐式转换；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">数值的有效表达式：首先是一个可选符号（加号或减号），然后是</SPAN><SPAN 
style="FONT-SIZE: 9pt">0</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">位或多位数字，一个圆点后跟一位或多数字，接着是一个可选的</SPAN><SPAN 
style="FONT-SIZE: 9pt">e</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN style="FONT-SIZE: 9pt">E 
,</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">句点后跟一个可选符号和一位或多位数字（在这个序列之前或之后）各空格。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">checked </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
unchecked</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，称为表达式的溢出检查环境。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">checked(</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">表达式</SPAN><SPAN 
style="FONT-SIZE: 9pt">)</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：溢出检查；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">e)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">unchecked(</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">表达式</SPAN><SPAN 
style="FONT-SIZE: 9pt">)</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：不进行溢出检查；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">对于溢出检查可以在项目属性进行设置；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在使类似</SPAN><SPAN 
style="FONT-SIZE: 9pt">Convert.ToInt</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">这类转换时，它们总是要进行溢出检查，</SPAN><SPAN 
style="FONT-SIZE: 9pt">checked</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">uncheckedud</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字以及项目属性设置没有什么作用；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">枚举的基本类型可以是</SPAN><SPAN 
style="FONT-SIZE: 9pt">byte,sbyte,short,ushort,int,uint,long</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">ulong</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">结构各枚举，都在代码的主体外部声明的。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">(string)</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">例如：（</SPAN><SPAN 
style="FONT-SIZE: 9pt">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）</SPAN><SPAN 
style="FONT-SIZE: 9pt">enum1,</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">进行转换是不行的，因为需要进行的处理并不仅是把存储在枚举变的数据放在</SPAN><SPAN 
style="FONT-SIZE: 9pt">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量中，而是要更复杂一些；</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在把</SPAN><SPAN 
style="FONT-SIZE: 9pt">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">转换为枚举值时，有一个特定的命令用于这种类型的转换，即</SPAN><SPAN 
style="FONT-SIZE: 9pt">Enum.Parse(),</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">其用法如下：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">enumerationType</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）</SPAN><SPAN 
style="FONT-SIZE: 9pt">Enum.Parse(typeof(enumrationType),enumrationString);<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">列：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">有枚举定义如下：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">enum</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN 
style="COLOR: teal">Orientation</SPAN>:<SPAN 
style="COLOR: blue">byte</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
north=1,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
south,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
east,</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 18pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">west<BR>}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">则其转换规则为：<BR>&nbsp;&nbsp;&nbsp;&nbsp; 
(<SPAN style="COLOR: teal">Orientation)<SPAN 
style="COLOR: teal">Enum</SPAN>.Parse(<SPAN 
style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: teal">Orientation</SPAN>), 
<SPAN style="COLOR: maroon">"1"</SPAN>);</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">10.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">注在</SPAN><SPAN 
style="FONT-SIZE: 9pt">C#</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中用以下方式定数组是不可以的：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>int[] array=new int[10]{5,9,10,2}</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">11.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt">string </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类型变量可以看作是</SPAN><SPAN 
style="FONT-SIZE: 9pt">char</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">变量的只读数组。这样，就可以使用下面的语法访问每个字符：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">string</SPAN> myString = <SPAN 
style="COLOR: maroon">"A 
string"</SPAN>;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">char</SPAN> myChar = 
myString[0];<BR>&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">但是，不能用这种方式为各个字符变量赋值；</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">12.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">定义多维数组：double[,] hillHeight= new 
double[3,4];</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">13.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">练习：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">下面的转换那些不是隐式转换？</SPAN></P>
<P 
style="MARGIN-LEFT: 63pt; TEXT-INDENT: -63pt; TEXT-ALIGN: left; tab-stops: list 63.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
i.<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Int 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">转换为 
short;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: red">不是</SPAN></SPAN></P>
<P 
style="MARGIN-LEFT: 63pt; TEXT-INDENT: -63pt; TEXT-ALIGN: left; tab-stops: list 63.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
ii.<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Short 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">转换为 
int;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: red">是</SPAN></SPAN></P>
<P 
style="MARGIN-LEFT: 63pt; TEXT-INDENT: -63pt; TEXT-ALIGN: left; tab-stops: list 63.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
iii.<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Bool 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">转换为 
string;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: red">不是</SPAN></SPAN></P>
<P 
style="MARGIN-LEFT: 63pt; TEXT-INDENT: -63pt; TEXT-ALIGN: left; tab-stops: list 63.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 新宋体"><SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
iv.<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Byte 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">转换为 
float;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: red">是</SPAN></SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">Shor </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类型包含彩虹的颜色，再加上黑色和白色，据此编写</SPAN><SPAN 
style="FONT-SIZE: 9pt">Color</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">枚举的代码。这个枚举可以使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">byte</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类型吗？</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">一、可以使用；</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">二、代码：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;<SPAN 
style="COLOR: blue">enum</SPAN> <SPAN style="COLOR: teal">Rainbow</SPAN>:<SPAN 
style="COLOR: blue">byte</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">　　　　{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">　　　　&nbsp;&nbsp; 
Red,&nbsp;&nbsp;&nbsp; </SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Orange,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Yellow,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Green,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cyan,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Blue,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purple,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Black,</SPAN></P>
<P style="MARGIN-LEFT: 27pt; TEXT-INDENT: -27pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; White&nbsp;&nbsp; 
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; COLOR: red">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">下面的代码可以成功编译吗？如果不能，为什么？</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>string[] blab = new string[5];<BR>string[5] = 5th 
stirng;<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">解答：不能，“</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red">string[5]</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 宋体">”数组名用法不正确且索引也超出最大数，赋值语句后的字符串需加双引号。</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个控制台应用程序，它接收用户输入的一个字符串，将其中的字符以与输入的相反顺序输出。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 13.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> inputString = <SPAN 
style="COLOR: blue">null</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: teal">Console</SPAN>.Write(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入一字符串："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputString = <SPAN 
style="COLOR: teal">Console</SPAN>.ReadLine().Trim();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (!<SPAN 
style="COLOR: blue">string</SPAN>.IsNullOrEmpty(inputString))</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">for</SPAN> (<SPAN style="COLOR: blue">int</SPAN> i = 
inputString.Length-1; i &gt;=0; i--)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;<SPAN style="COLOR: teal">Console</SPAN>.Write(<SPAN 
style="COLOR: maroon">"{0}"</SPAN>, inputString[i]);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 34.4pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Console</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.ReadKey();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt">e)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个控制台应用程序，它接收一个字符串，用“</SPAN><SPAN 
style="FONT-SIZE: 9pt">yes”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">替换字符串所有的“</SPAN><SPAN 
style="FONT-SIZE: 9pt">no</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">”。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 13.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">string</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> inputString = <SPAN 
style="COLOR: blue">null</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.Write(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入一字符串："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputString = <SPAN 
style="COLOR: teal">Console</SPAN>.ReadLine().Trim();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: blue">if</SPAN> (!<SPAN 
style="COLOR: blue">string</SPAN>.IsNullOrEmpty(inputString))</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(inputString.Replace(<SPAN 
style="COLOR: maroon">"no"</SPAN>, <SPAN 
style="COLOR: maroon">"yes"</SPAN>));</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 22.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; <SPAN 
style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt">f)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个控制台应用程序，给字符串中的每个单词加上双引号。</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第</SPAN><SPAN 
style="FONT-SIZE: 9pt">6</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">函</SPAN><SPAN 
style="FONT-SIZE: 9pt">&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">数</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">参数数组：</SPAN><SPAN 
style="FONT-SIZE: 9pt">C#</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">允许为函数指定一个（只能指定一个）特定的参数，这个参数必须是函数定义中的最后一个参数，称为参数数组。参数数组可以使用个数不定的参数调用函数，它可以使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">params </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字来定义：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">int</SPAN> 
SumVals(<SPAN style="COLOR: blue">params</SPAN> <SPAN 
style="COLOR: blue">int</SPAN>[] vals)</SPAN></P>
<P style="MARGIN-LEFT: 25.5pt; TEXT-INDENT: -4.5pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{<BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="TEXT-INDENT: 22.5pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">引用参数：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">用作ref参数的变量有两个限制。首先，函数可能会改变引用参数的值，所以必须在函数调用中使用变量。所以，下面的代码是非法的：<BR>const 
int myNumber=5;<BR>ShowDouble(ref myNumber);</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">其次，必须使用初始化过的变量。C#不允许假定ref参数在使用它的函数中初始化，下面的代码也是非法的。<BR>int 
myNumber;<BR>ShowDouble(ref myNumber);</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">输出参数：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">把未赋值的变量用作ref参是非法的，但可以把未赋值的变量用作out参数。</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">别外，在函数使用out参数时，该参数必须看作是还未赋值的。即调用代码可以把已赋值的变量用作out参数，存储在该变量中的值会函数执行时丢失；</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果局部变量和全局变量同名，全局变量就会被屏蔽；</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Main </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">函数可以使用4种签名：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Static void Main()</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Static void Main(string[] 
args)</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Static int Main()</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Static int Main(string[] 
args)</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">委托是一种可以把引用存储为函数类型；</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">委托的声明非常类似于函数，但不带函数体，且要使用delegate 
关键字。委托的声明指定了一个函数签名，其中包含一个返回类型和参数列表。</SPAN></P>
<P 
style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 21.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">练习：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">下面两个函数都有错误，请指出这些错误。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">static bool 
Write()</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Console.WriteLine(</SPAN><SPAN style="FONT-SIZE: 9pt">“</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Text output from function.</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 新宋体">解答：函数无返回值；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">static void 
myFunction( stirng label , params int[] args , bool showLabel )</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
if(showLabel)</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Console.WriteLine(label);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; foreach(int i 
in args)</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
Console.WriteLine(</SPAN><SPAN style="FONT-SIZE: 9pt">“</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{0}</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">,i);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: red; FONT-FAMILY: 新宋体">解答：C#规定允许为函数指定一个（只能指定一个）特定的参数，这个参数必须是函数定义中的最后一个参数，称为参数数组。参数数组可以使用个数不定的参数调用函数，它可以使用params关键字来定义。</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">编写一个应用程序，该程序使用两个命令行参数，分别把值放在一个字符串和一个整型变量中，然后显示这些值：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">/**************************************************</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">编写一个应用程序，该程序使用 
两个命令行参数，</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">分别把值放在一个字符串和一个整型变量中，</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">然后显示这些值：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;*/</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Collections.Generic;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Text;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">namespace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> Exercise_Tow</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Program</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
Main(<SPAN style="COLOR: blue">string</SPAN>[] args)</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (args.Length != 2)</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请分别输入一个字符串和一个整型变量命令行参数！"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">else</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">string</SPAN> stringVar = args[0];</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">int</SPAN> intVar = <SPAN 
style="COLOR: teal">Convert</SPAN>.ToInt32(args[1]);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">来自命令行的参数："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">字符串为：{0}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">, stringVar);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">整型变量：{0}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">, intVar);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;stringVar = <SPAN style="COLOR: blue">null</SPAN>;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">创建一个委托，在请求用户输入时，使用它模拟Console.ReadLine();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">/*</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">第六章 练习 3 </SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">创建一个委托，在请求用户输入时，使用它模拟Console.ReadLine();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;* </SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">&nbsp;*/</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Collections.Generic;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Text;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">namespace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> Exercise_Three</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Program</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">delegate</SPAN> <SPAN 
style="COLOR: blue">string</SPAN> <SPAN 
style="COLOR: teal">Input</SPAN>();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">delegate</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
<SPAN style="COLOR: teal">Output</SPAN>(<SPAN style="COLOR: blue">string</SPAN> 
param);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
Main(<SPAN style="COLOR: blue">string</SPAN>[] args)</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Output</SPAN> output = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">Output</SPAN>(<SPAN 
style="COLOR: teal">Console</SPAN>.Write);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Input</SPAN> input = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">Input</SPAN>(<SPAN 
style="COLOR: teal">Console</SPAN>.ReadLine);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
output(<SPAN style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">请输入一字符串："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">string</SPAN> inputString = input();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
output = <SPAN style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Output</SPAN>(<SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
output(<SPAN style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">输入的字符串为："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> + inputString);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
inputString = <SPAN style="COLOR: blue">null</SPAN>;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">修改下面的结构，使这包含一个返回订单总价格的函数；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">struct order</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; public string 
itemName;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; public int 
&nbsp;&nbsp; unitCount;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; public double 
unitCost;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">解答：<BR><SPAN style="COLOR: blue">struct 
<SPAN style="COLOR: teal">order</SPAN></SPAN></SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
itemName;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
unitCount;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">double</SPAN> 
unitCost;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">double</SPAN> 
GetTotalPrices()</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> unitCount * unitCost;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><EM><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">e)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN></EM><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在order结构中添加另一个函数，该结构返回一个格式化的字符串，以合适的值替换用尖括号括起来的斜体条目。<BR>Order 
Information:<EM>&lt;unit count&gt; &lt;item name&gt;</EM> items at $<EM>&lt;unit 
cost&gt;</EM> each, total cost $<EM>&lt;toal cost&gt;</EM></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">解答：Order完整代码如下：<BR><SPAN 
style="COLOR: blue">using System;</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Collections.Generic;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">using</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> System.Text;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">namespace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> Exercise_FourFive</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Program</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
Main(<SPAN style="COLOR: blue">string</SPAN>[] args)</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">测试代码；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Order</SPAN> order = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Order</SPAN>();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
order.itemName = <SPAN style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">当当网：《C# 入门经典 
第三版》"</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
order.unitCost = 98.00;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
order.unitCount = 1;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">练习4 测试；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">练习四 测试输出："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">订单总价格：{0}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">, order.GetTotalPrices());</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"--------------------------------------------"</SPAN>);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">练习5 测试；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">练习五 测试输出："</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine(order.GetOrderInfomation());</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">struct</SPAN> <SPAN 
style="COLOR: teal">Order</SPAN></SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
itemName;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
unitCount;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">double</SPAN> 
unitCost;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">double</SPAN> 
GetTotalPrices()</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> unitCount * unitCost;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
GetOrderInfomation()</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> <SPAN 
style="COLOR: teal">String</SPAN>.Format(<SPAN style="COLOR: maroon">"Oreder 
Information</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">：{0} {1} items at ${2} 
each, total count ${3}"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">,</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
unitCount,</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
itemName,</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
unitCost,</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
GetTotalPrices());</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><BR style="PAGE-BREAK-BEFORE: always" 
clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">第七章调试和错误处理</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">输出调试信息：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">些时可以使用以下两个命令：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Debug.WriteLine();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Trace.WriteLine();</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这两个命令函数的使用方法几乎完全相同，但有一个关键的区别。第一个命令仅在调试模式下运行，而第二个命令还可用于发布程序。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">注意：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这两函数的用法与Console.WriteLine() 
是不同的。其惟一的字符串参数用于输出消，而不需要使用{x}语法插入值。这意味着必须使用+ 运算符在字符串中插入变量值。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">以下两个命令需使用到以下命名空间：<SPAN 
style="COLOR: blue">using</SPAN> System.Diagnostics;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">除以上命令外还有：</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Debug</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.Write();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Trace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.Write();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Debug</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.WriteLineIf();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Trace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.WriteLineIf();</SPAN></P>
<P 
style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; TEXT-ALIGN: left; tab-stops: list 42.0pt" 
align=left><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Debug</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.WriteIf();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Trace</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.WriteIf();</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">输出调试信息的两种方法是：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">诊断输出：　总是要从应用程序中输出调试结果时使用这种方法，尤其是要输出的字符串比较复杂，涉及几个变量或许多信息的情况下，使用该方法比较好。别外，如果要在发布模式下获得执行应用程序结果，Trace命令会常常是唯一的选择。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">跟踪点：调试应用程序时，希望快速输出重要信息，以便解决语义错误，应使用跟踪点。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">断点：是源代码中自动进入中断模式的一个标记。它们可以配置为：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在遇以断点时，立即进入中断模式；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在遇到断点时，如果布尔表达式的值为true，就进入中断模式；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">遇到某断点一定的次数后，进入中断模式；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在遇到断点时，如果自从上次遇到断点以来变量的值发生了变化，就进入中断模式；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">把文本输出到调试窗口中，或者执行一个宏；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">进入中断模式的其他方式：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">一种是在产生一个未处理的导常时选择进入该模式；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">另一种方式是生一个判定语句时中断；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">判定语句也有两个函数：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Debug.Assert();</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Trace.Assert();</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这两个函数带三个参数，第一个参数是一个布尔值，其值为false会触发判定语句。第二、第三个参数是两字符串参数，分别把信息写到弹出的对话框和Output 
窗口中。<BR>如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
Debug.Assert(myVar &lt; 10, </SPAN><SPAN style="FONT-SIZE: 9pt">“</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">myVar is 10 or greater.</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">,</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Assertion occurred in 
Main()</SPAN><SPAN style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">典型的导常代码块：</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">try</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">cathc(&lt;exceptionType&gt; 
e)</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">finally</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这些代码的用法如下：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">try</SPAN></STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">——包含产生异常的代码（在谈到异常时，其中的“产生”在C#语言中也可以是“生成”或“导致”）。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">catch</SPAN></STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">——包含产生异常时要执行的代码。 cathc 
块可以用&lt;exceptionType&gt;,设置为只响应特定的异常类型（例如System.IndexOutOfRangeException），以便提供多个catch块，还可以完全省略这个参，让一般的catch 
块响应所有的异常；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">finally</SPAN></STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">——包含总是会执行的代码，如果没有产生导常，则在try块之后执行，如果外理了异常，就在catch块后执行，或者在未处理的异常中断应用程序之前执行（此时处理这个块，其原因是存在这个块，否则也可以在这个块的后面放置代码）。</SPAN></P>
<P><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在try代码中出现异常后，发生的事件依次是：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">try</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">块在发生异常的地方中断程序的执行；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果有catch 
块，就检查该块是否匹配于已发生的异常类型。如果没有</SPAN>&nbsp;<SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">catch </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">块，就执行finally 
块（如果没有cathc块，就一定要有finally块）；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果有catch块，但它与已发生的异常类型不匹配，就检查是否有其他catch块。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果有catch块匹配于已发生的异常类型，就执行它包含的代码，再执行finally块中的代码（如果有）。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果catch 
块不匹配于已发生的异常类型，就执行finally（如果有）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">异常处理的注意事项</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">注意，必须在更一般的异常捕获之前比较特殊的异常提供catch块。 
如果catch块的顺序错误，应用程序就会编译失败。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">还要注意可以在catch块中产生异常，主法是使用上一个示例中的方式，或使用下述表达式：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">throw;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这个表达式会再次产生catch块处理过的异常。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果以这种方式产生异常，该异常就不会由当前的try…catch…finally块处理，而是由上一级的代码处理（但嵌套结构中的finally块仍会执行）；</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">例如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">try</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">catch</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
throw;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">finally</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; //</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">此代码块将仍执行；</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">10.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">练习：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">“使用Trace.WriteLine() 
要优于使用Debug.WriteLine()，因为调试版本仅能用于调试程序。”这个观点正确吗？为什么？</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">解答：首先这种观点是做误的，Debug.WriteLine()不能用于发布的程序，在布版本中，该命会消失，这肯定有其优点（首当其冲的是，编译好的代码文件比较小），实际上，一个源文件可以创建出两个版本的应用程序。调试版本显示所有的额外诊断信息，而发布版本没有这个功能，也不给用显示信息，否则，用户会觉得这非常讨厌。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">为一个简单的应用程序编写代码，其中包含一循环，该循环在运行5000次后产生一个错误，使用断点在第5000次循环出现错误前进入中断模式（注意产生错误的一种简单试是试图访问一个不存在的数组元素，例如在一个有100个元素的数组中，访问myArray[1000].</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">解答：程序代码及断点设置如下图：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">3)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">“只有在不执行catch块的情况下，才执行finally代码块”对吗？<BR>解答：错，根据C# 
对异常的定义，无任其是否执行catch块，均执行finally代码块（如果有）；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">4)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">下面定义了一个枚举数据类型orientation。编写一个应用程序，使用结构代异常处理把Byte类型的变量安全地强制转换为orientation类型变量。注意可以使用checked()关键字产生异常，下面是一个示例。这段代码可以在应用程序中使用：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;<SPAN style="COLOR: blue">enum</SPAN> <SPAN 
style="COLOR: teal">Orientation</SPAN>:<SPAN 
style="COLOR: blue">byte</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; north = 1,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; south = 2,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; east = 3,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; west = 4</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;myDirection = checked((<SPAN 
style="COLOR: teal">Orientation</SPAN>)myByte)</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">解答：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Program</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">static</SPAN> <SPAN 
style="COLOR: blue">void</SPAN> Main(<SPAN style="COLOR: blue">string</SPAN>[] 
args)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">byte</SPAN> 
myByte=2;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">try</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: teal">Orientation</SPAN> myDirection = <SPAN 
style="COLOR: blue">checked</SPAN>((<SPAN 
style="COLOR: teal">Orientation</SPAN>)myByte);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">catch</SPAN> 
(<SPAN style="COLOR: teal">Exception</SPAN> ex)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine(ex.ToString());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine(myDirection.ToString());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">enum</SPAN> <SPAN 
style="COLOR: teal">Orientation</SPAN>:<SPAN 
style="COLOR: blue">byte</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;north = 1,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;south = 2,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;east = 3,</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;west = 4</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp; </SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
<BR><BR></SPAN></P><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">第八章面向对象编程简介</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">对像就是</SPAN><SPAN 
style="FONT-SIZE: 9pt">OOP</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">应用程序的一个组成部件。这个组成部件封装了部分应用程序，这部分程序可以是一个过程、一些数据或一些更抽象的实体。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">UML</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（</SPAN><SPAN 
style="FONT-SIZE: 9pt">Universal Modeling Language</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，</SPAN><SPAN 
style="FONT-SIZE: 9pt">UML</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）通用建模语言；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">构造函数与字段、属性和方法一样，可以是公共或私有的，在类外部的代码不能用私有的构造函数实例化对像，而必须使用公共构造函数；这样，就可以要求类用户使用非默认的构造函数（把默认的构造函数设置为私有的）；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">静态成员可以在类的实例之间共享，所以可以将它们看作是类的全局对像。静态属性和静态字段可以访问独立于任何对象实例的数据，静态方法可以执行与对像类型相关，但与对像实例无关的命令。在使用静态成员时，甚至不需要实例化对像。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在</SPAN><SPAN 
style="FONT-SIZE: 9pt">UML</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">语法中，类的静态成员用下划线表示。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">静态类：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">我们常常希望类只包静态成员，且不能用于实例化对像（例如</SPAN><SPAN 
style="FONT-SIZE: 9pt">Console</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）。为此，一种简单的方法是使用静态类，而不是把类的构造函数设置为私有。静态类只能包静态成员，不需构造函数的定义，因为按照定义，它根本不能实例化；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">虚拟成员不能是私有成员，因为这样会自相矛盾——不能说成员可以由派生类重写，同时派生类又不能访问它。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">抽象其类可以提供成员的实现代码，这是很常见的。不能实例化抽象类，并不意味着不能抽像类中封装功能。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">对象之间的关系：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">包含关系列：一个类包含另一个类。这类似于继续关系，但包含类可以控制对被包含类的成员的访问，甚至在使用被包含类的成员前进行其他处理。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">集合关系：</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">一个类用作另一个类的多个实例的容器。这类似于对像数组，但集合有其他功能，包括索引、排序、重新设置大小等。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">10.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">引用类型与值类型的区别：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">值类型在内存的一个地方（称为堆栈）存储它们自己和它们的内容；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">引用类型在内存的一个地方（称为堆）存储一个引用，而在另一个地方存储内容；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">3)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">值类型与引用类型的一个主要区别是，值类型总是包含一个值，而引用类型可以是</SPAN><SPAN 
style="FONT-SIZE: 9pt">null</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，表示他们不包含值。但是可空类型（泛型的一种）创建一个值类型，使值类在这个方面的行为方式类似（即可以为</SPAN><SPAN 
style="FONT-SIZE: 9pt">null</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">11.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">练习：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">下述哪个项在</SPAN><SPAN 
style="FONT-SIZE: 9pt">OOP</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中有真实级别的可访问性？</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">友元</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">公共</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">安全</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">私有</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">受保护的</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">松散的</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">通配符</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：公共、私有、受保护的；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">“必须手动调用对像的析构函数，否则就会浪费资源”，对吗？</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：错误，一般情况下，不需要提供析构方法的代码，而是由默认的析函数执行操作。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">3)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">必须创建一个对象，才能调用其类的静态方法吗？</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：静态属性和静态字段可以访问独立于任何对象实例的数据，静态方法可以执行与对像类型相关，但与对像实例无关的命令。在使用静态成员时，甚至不需要实例化对像。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">4)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">绘制一个类似于本章的</SPAN><SPAN 
style="FONT-SIZE: 9pt">UML</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">图，其中包含下述类和接口：</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">抽象类</SPAN><SPAN 
style="FONT-SIZE: 9pt">HotDrink</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，它有方法</SPAN><SPAN 
style="FONT-SIZE: 9pt">Drink(),AddMilk()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">AddSugar()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，以及属性</SPAN><SPAN 
style="FONT-SIZE: 9pt">Milk</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">Sugar.</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口</SPAN><SPAN 
style="FONT-SIZE: 9pt">ICup</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，它有方法</SPAN><SPAN 
style="FONT-SIZE: 9pt">Refill()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN 
style="FONT-SIZE: 9pt">Wash()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，以及属性</SPAN><SPAN 
style="FONT-SIZE: 9pt">Color </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
Volume</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">派生于</SPAN><SPAN 
style="FONT-SIZE: 9pt">HotDirink </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的类</SPAN><SPAN style="FONT-SIZE: 9pt"> 
CupOfCoffee,</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">支持</SPAN><SPAN 
style="FONT-SIZE: 9pt">ICup</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口，还有一个属性</SPAN><SPAN 
style="FONT-SIZE: 9pt">BeanType</SPAN><STRONG><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN></STRONG></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">派生于</SPAN><SPAN 
style="FONT-SIZE: 9pt">HotDrink </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的类</SPAN><SPAN style="FONT-SIZE: 9pt"> 
CupOfTea </SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">支持</SPAN><SPAN 
style="FONT-SIZE: 9pt">ICup</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口，还有一个属性</SPAN><SPAN 
style="FONT-SIZE: 9pt">LeafType</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">5)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">为一个函数编写一些代码，接受上述示例的两相杯子对像中的一个，作为一个参数。该函数应可以为它传送的任何杯子对象调用</SPAN><SPAN 
style="FONT-SIZE: 9pt">AddMilk()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">Drink() </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
Wash()</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法；</SPAN></P>
<P><SPAN style="FONT-SIZE: 9pt">&nbsp;&nbsp; </SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第</SPAN><SPAN style="FONT-SIZE: 9pt"> 9 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">定义类</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">C# </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中的类定义：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //class 
members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">这段代码定义了一个类，在默认情况下，类声明为内部的，即只有当前项目中的代码才能访问它，可以用</SPAN><SPAN 
style="FONT-SIZE: 9pt">inernal </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">访问修饰符关键字显式指定，如下所示（但这不是必需的）</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">internal class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Class 
members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">另外，还可以指定类是公共的，应可以由其他项目中的代码来回访问。为此，要使用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">public </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Class 
members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">除了这两个访问修饰符关键外，还可以指定类是抽象的（不能实例化，只能继承，可以有抽象成员）或密封类（</SPAN><SPAN 
style="FONT-SIZE: 9pt">sealed</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）不可继续，为此可以使用两个互斥的关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN style="FONT-SIZE: 9pt"> 
sealed</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">声明抽象类：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public abstract class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Class 
members, may be abstract.</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">其中</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyClass </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">是一个公共抽象类，也可以是内部抽像类；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">声明密封类：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public sealed class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // class 
members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类的继承：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyClass</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：</SPAN><SPAN 
style="FONT-SIZE: 9pt">Mybase</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // class 
member;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在</SPAN><SPAN 
style="FONT-SIZE: 9pt">C#</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的类定义中，只能有一个基类，如果继承了一个抽象类，就必须实现所继承的所有抽象成员（除非派生类也是抽象类）；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编译器不允派生类的可访问性比其基类高。也就是说，内部类可以继承于一个公共类，但公共类不能继承于一个内部类。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">所有的接口成员都必须在支持该接口的类中实现，但如果不想使用给定的接口成员，就可以提供一个“空”的执行方式（没有函数代码）。还可以把接口成员实现为抽像类中的抽象成员。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">C#</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">可供使用的访问修饰符的组合：</SPAN></P>
<TABLE 
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse" 
cellSpacing=0 cellPadding=0 border=1>
  <TBODY>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; PADDING-LEFT: 5.4pt; BACKGROUND: #e0e0e0; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P style="TEXT-ALIGN: center" align=center><STRONG><SPAN 
      style="FONT-FAMILY: 黑体">修饰符</SPAN></STRONG></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; PADDING-LEFT: 5.4pt; BACKGROUND: #e0e0e0; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P style="TEXT-ALIGN: center" align=center><STRONG><SPAN 
      style="FONT-FAMILY: 黑体">含意</SPAN></STRONG></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">无或</SPAN><SPAN 
      style="FONT-SIZE: 9pt">internal</SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
  style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类只能在当前项目中访问</SPAN></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt">public </SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
  style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类或以在任何地方访问</SPAN></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt">abstract </SPAN><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
      style="FONT-SIZE: 9pt"> internal abstract</SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类只能在当前项中访问，不能实例化，只能继承</SPAN></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt">public abstract</SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类可以在任何地方访问，不能实例化，只能继承</SPAN></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt">sealed </SPAN><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
      style="FONT-SIZE: 9pt">internal sealed</SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类只能在当前项目中访问，不能派生，只能实例化</SPAN></P></TD></TR>
  <TR>
    <TD 
    style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN style="FONT-SIZE: 9pt">public sealed</SPAN></P></TD>
    <TD 
    style="BORDER-RIGHT: medium none; PADDING-RIGHT: 5.4pt; BORDER-TOP: medium none; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; WIDTH: 213.05pt; PADDING-TOP: 0cm; BORDER-BOTTOM: windowtext 1pt solid" 
    vAlign=top width=284>
      <P><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类可以在任何地方访问，不能派生，只能实例化</SPAN></P></TD></TR></TBODY></TABLE>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">10.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的定义：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public interface 
IMyInterface</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Interface member;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">11.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
sealed </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">不能在接口中使用，因为这个两个修饰符在接口定义中是没有意义的（它们不包含执行代码，所以不能直接实例化，且必须是可以继承的）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">12.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的继承也可以用与类继承的类似方式来指定。主要区别是可以使用多个基接口。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">13.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的继承：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public interface 
IMyInterface</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：</SPAN><SPAN 
style="FONT-SIZE: 9pt">IMyinterface1</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，</SPAN><SPAN 
style="FONT-SIZE: 9pt">IMyinterface2</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Interface member;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">14.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口不是类，所以没有继承</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Object ,</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">但是为了方便，</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Object</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的成员可以通过接口类型的变来访问。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">ICup</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> cup = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">CupOfCoffee</SPAN>();</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">cup.GetHashCode;// GetHashGode 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">属于Object 类成员；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">15.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类类型比较：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">if(myObj.GetType() == 
typeof(MyCalss))</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">16.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">可提供的构造函数的个数是没有限制的（当然不能耗尽内存，也不能有相同的参数集，所以“几乎无限制”更合适）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">17.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口和抽象类</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">相同之处：抽象类和接口都包含可以由派生类继承的成员。接口和抽象类都不能直接实例化，但可以声明它们的变量。如果这样做，就可以使用多态性把继承这两种类型的对象指定给它们的变量。接着通过这些变量来使用这些类型的成员，但不能真接访问派生对象的其他成员。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">区别之处：派生类只能继承一个基类，即只直接继承一个抽象类（但可以用一个继承链包含多个抽象类）。相反，类可以使用任意多个接口。但这不会产生太的区别——这两种情况得到的效果是类似的。只是采用接口的方式略有不同。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">抽象类可以拥有抽象成员（没有代码体，且必须在派生类中实现，否则派生类本身必须也是抽象的）和非抽象成员（它们拥有代码体，也可以是虚拟的，这样就可以在派生类中重写）。另一方面，接口成员必须都在使用了该接口的类上实现——它们没有代码体。另外，按照定义，接口成员是公共的（因为它们倾向于在外部使用），但抽象类的成员可以是私有的（只要它们不是抽象的）、爱受保护的、内部的或受保护的内部成员（其中受保护的内部成员只能在应用程序的代码或派生类中访问）。此外，接口不能包含字段、构造函数、析构函数、静态成员或常量）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">18.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口与抽象类用于完全不同的目的。抽象类主要用作对象系列的基类，共享某些主要特性，例如共同的目的和结构。接口则主要用于类，这些类在基础水平上有所不同，但仍可以完成某些相同的任务。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">19.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">结构是值类型，而类是引用类型；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">20.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">练习：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">a)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">下面的代码有什么错误？</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public sealed class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // class 
members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
myDerivedClass</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Class 
members</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：包含</SPAN><SPAN 
style="FONT-SIZE: 9pt"> sealed </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字的</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类只能在当前项目中访问，不能派生，只能实例化；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">b)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如何定义不能创建的类？</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：可以通过添加关键字“</SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">”创建抽象类，根据</SPAN><SPAN 
style="FONT-SIZE: 9pt">C# </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">定义抽象类不能实例化。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">c)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">为什么不能创建的类仍有用？如何利用它们的功能？</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">解答：接口和抽象类都是不能创建的类，但可以声明它们的变量。如果这样做，就可以使用多态性把继承这两种类型的对象指定给它们的变量。接着通过这些变量来使用这些类型的成员，但不能直接访问派生对象的其他成员。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">d)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在类库项目</SPAN><SPAN 
style="FONT-SIZE: 9pt">Vehicles </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中编码，执行本章在“接口和抽象类”一节中讨论的对象系列</SPAN><SPAN 
style="FONT-SIZE: 9pt">Vehicle</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，其中有</SPAN><SPAN 
style="FONT-SIZE: 9pt">9</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">个对象和</SPAN><SPAN 
style="FONT-SIZE: 9pt">2</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">个接口需用实理；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">e)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">创建一个控制台应用程序项目</SPAN><SPAN 
style="FONT-SIZE: 9pt">Traffic</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，它引用</SPAN><SPAN 
style="FONT-SIZE: 9pt">Vehicles.dll</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，其中包括函数</SPAN><SPAN 
style="FONT-SIZE: 9pt">AddPassenger()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，它接受任何带有</SPAN><SPAN 
style="FONT-SIZE: 9pt">IPassengerCarrier </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的对象。要证明代码可以运行，使用支持这个接口的每个对象实例调用函数，在每个对象上调用派生于</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Object</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的</SPAN><SPAN 
style="FONT-SIZE: 9pt">ToString()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法，并把结输出到屏幕上。</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 'Times New Roman','serif'"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P style="TEXT-ALIGN: center" align=center><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第</SPAN><SPAN 
style="FONT-SIZE: 9pt">10</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">章</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">定义类成员</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">成员定议：</SPAN></P>
<P style="TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在类定义中，也提供了该类中所有成员的定义，包括字段、方法和属性。所有的成员都有自己的访问级别，用下面的关键字之一来定义；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">public </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">成员可以由任何代码访问；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">private </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——成员只由类中的代码访问（如果没有使用任何关键字，就默认使用这个关键字）。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">internal </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——成员只能由定义它的项目（程序集）内部代码访问。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">protected </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——成员只能由类或派生类中的代码访问。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">最后两个关键字可以合并使用，所以也有</SPAN><SPAN 
style="FONT-SIZE: 9pt">protected internal </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">成员。它们只能由项目（更准确地说，是程序集）派生类的代码访问。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">字段、方法和属性可以使用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">来声明，这表示它们是类的静态成员，而不是对象实例的成员；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">字段也可以使用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">readonly</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，表示这个字段只能在执行构造函数的过程中赋值，或由初始化赋值语句赋值。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">例如：</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR>class MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
readonly int MyInt = 17;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">可以使用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">const </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">来创建一个常量。按照定义，</SPAN><SPAN 
style="FONT-SIZE: 9pt">const</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">成员也是静态的，所以不需要用</SPAN><SPAN 
style="FONT-SIZE: 9pt">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">修饰（实际上，用</SPAN><SPAN 
style="FONT-SIZE: 9pt">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">修饰会产生一个错误）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">定义方法：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法使用标准函数格式，以及可访问性和可选的</SPAN><SPAN 
style="FONT-SIZE: 9pt">static </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">修饰符来声明。例如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
string GetString()</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 
“Here is a string.”;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">也可以在方法定义中使用下述关键字：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">virtual </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——方法可以重写。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法必须在抽象的派生类中重写（只用于抽象类中）。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">override</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——方法重写了一个基类方法（如果方法被子重写，就必须使用这个关键字）。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">extern </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">——方法定义放在其他地方。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如果使用了</SPAN><SPAN 
style="FONT-SIZE: 9pt">override</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，也可以使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">sealed</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">指定在派生类中不能对这个方法作进一步的修改，即这个方法不能由派生类得写。例如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyDerivedClass </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyBaseClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
override sealed void 
DoSometing()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">属性至少要包含一个块，才是有效的（既不能读取也不能修改的属性是没有任何用处的）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">属性的基本结构包括标准的可访问修饰（</SPAN><SPAN 
style="FONT-SIZE: 9pt">public ,private</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">等）、所跟类名、属性名和</SPAN><SPAN 
style="FONT-SIZE: 9pt">get</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">块（或</SPAN><SPAN 
style="FONT-SIZE: 9pt">set</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">块，或者</SPAN><SPAN 
style="FONT-SIZE: 9pt">get</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">块和</SPAN><SPAN 
style="FONT-SIZE: 9pt">set</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">块，其中包含属性处理代码）。例如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public&nbsp;int 
MyIntProp</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
get</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Property get code;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">set</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Property set code.</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">属性可以使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">virtual</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，</SPAN><SPAN 
style="FONT-SIZE: 9pt">override </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
abstract </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字，就像方法一样，但这几个关键字不能用于字段。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">属性访问器可以有自己的可访问性：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">private int 
myInt;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public int 
MyIntProp</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
get</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retuen 
myInt;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">protected set</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myInt = 
value;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">属性与字段间，使用属性可能对性能产生比较小的影响（对性能的影响非常小，我们不可能察觉到），当然，使用属性也可以在属性中进行固有的有效性验证，这对为中的代码也是有益的。　</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">10.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">隐藏基类方法：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">当从基类继承一个（非抽象的）成员时，也就继承了其执行代码。如果继承的成员是虚拟的，就可以用</SPAN><SPAN 
style="FONT-SIZE: 9pt">override </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字重写这段代码。无论继承的成员是否为虚拟，都可以隐藏这些执行代码。这是很有用的，例如，继承的公共成员不像我们希望的那样工作，就可以隐藏它。列如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyBaseClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
void Domething()</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Base 
implementation;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyDeriverdClass</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">：</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyBaseClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new 
public void DoSomething()</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// </SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">11.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt">Base </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">使用对象实例，所以在静态成员中使用它会产生错误。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">12.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">与</SPAN><SPAN 
style="FONT-SIZE: 9pt">Base</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">一样，</SPAN><SPAN 
style="FONT-SIZE: 9pt">this</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">也可以用在类成员的内部，且该关键字也引用对象实例。由</SPAN><SPAN 
style="FONT-SIZE: 9pt">this</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">　引用的对象实例是当前的对象实例（即不能在静态成员中使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">this </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字，因为静态成员不是对像实例的一部份）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">13.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">嵌套的类定义：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">除了在命名空间中定义类之外，还可以在其他类中定义这些类。如果这么做，就可以在定义中使用各种访问修饰符，而不仅仅是</SPAN><SPAN 
style="FONT-SIZE: 9pt">public </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和　</SPAN><SPAN 
style="FONT-SIZE: 9pt">internal</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，也可以使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">new</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">　关键字隐藏继承类基类的类定义。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">例如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">public class 
MyClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
class myNestedClass</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
int nestedClassField;</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="TEXT-INDENT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">14.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的实现：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">interface 
IMyInterface</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
Interface members;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口成员的定义与类成员的定义相似，但有几个重要的区别：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">不允许使用访问修饰符（</SPAN><SPAN 
style="FONT-SIZE: 9pt">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">private</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">protected</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
style="FONT-SIZE: 9pt">internal</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">），所有的接口成员都是公共的。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口成员不能包含代码体。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口不能定义字段成员，但可以定义属性。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口成员不能用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">virtual</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
style="FONT-SIZE: 9pt">sealed </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">来定义。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类型定义成员是禁止的。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">15.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">可以使用关键字</SPAN><SPAN 
style="FONT-SIZE: 9pt">Virtual </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
style="FONT-SIZE: 9pt">abstract </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">来执行接口成员，但不能使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">或</SPAN><SPAN 
style="FONT-SIZE: 9pt">const</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。接口成员还可以在基类上实现。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">16.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口成员也可以由类显式地执行。如果这么做，该成员就只能通过接口来访问，不能通过类来访问。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口的显式实现：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN 
style="COLOR: blue">interface</SPAN> <SPAN 
style="COLOR: teal">IMyInterface</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">void</SPAN> DoSomething();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">void</SPAN> DoSomethingElse();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">MyBass</SPAN>:<SPAN 
style="COLOR: teal">IMyInterface</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">void</SPAN> <SPAN 
style="COLOR: teal">IMyInterface</SPAN>.DoSomething()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"IMyInterface.DoSomethgin()"</SPAN>);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
DoSomethingElse()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"DoSomethingElse()"</SPAN>);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">调用方法如下：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">MyBass</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> myBase = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">MyBass</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
myBase.DoSomethingElse();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: teal">IMyInterface</SPAN> iMyInterface = myBase;</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">iMyInterface.DoSomething();//DoSomething() 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">只能通过接口的方式调用。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">17.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">用非公共的可访问性添加属性访问器。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果用属性来实现接口，就必须实现匹配的get/set访问器。这并不是严格正确的——如果在定义属性的接口中只包含set块，就可以给类中的属性添加get块，反之也然。但是，只有所添加的访问器的可访问修饰符比接口中定义的访问器的可访问修饰符更严格时，才能这么做。因为按照定义，接口定义的访问器是公共的，也就是说，只能添加非公共的访问器。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">例如：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN 
style="COLOR: blue">interface</SPAN> <SPAN 
style="COLOR: teal">IMyInterface</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">int</SPAN> MyIntProperty</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">MyBaseClass</SPAN> : IMyinterface</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">protected</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
myInt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
MyIntProperty</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> myInt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">protected</SPAN> <SPAN 
style="COLOR: blue">set</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
myInt = <SPAN style="COLOR: blue">value</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">18.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">部分类定（</SPAN><SPAN 
style="FONT-SIZE: 9pt">partial class definition</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">），就是使用部分类定义，使类的定义横跨多个文件。例如，可以把字段、属性和构造函数放在一个文件中，而把方法放在另一个文件中。</SPAN><SPAN 
style="FONT-SIZE: 9pt"><BR></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">为此，只需在每个包含部分类定义的文件中对类使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">partial</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字，如下：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">Student</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第一个文件；</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN 
style="COLOR: blue">partial</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Student</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">学号；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
sno;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">学号；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
Sno</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> 
sno; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">set</SPAN> { sno = <SPAN 
style="COLOR: blue">value</SPAN>; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">姓名；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
name;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">姓名；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
Name</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> 
name; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">set</SPAN> { name = <SPAN 
style="COLOR: blue">value</SPAN>; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">年龄；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
age;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">年龄；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
Age</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> 
age; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">set</SPAN> { age = <SPAN 
style="COLOR: blue">value</SPAN>; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">性别；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: teal">ESex</SPAN> 
sex;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">性别；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: teal">ESex</SPAN> 
Sex</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> 
sex; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">set</SPAN> { sex = <SPAN 
style="COLOR: blue">value</SPAN>; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">Student </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">第二个文件：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN 
style="COLOR: blue">partial</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Student</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">构造函数二；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN style="COLOR: gray">&lt;param 
name="sno"&gt;</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">学号；</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: gray; FONT-FAMILY: 新宋体">&lt;/param&gt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN style="COLOR: gray">&lt;param 
name="name"&gt;</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">姓名；</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: gray; FONT-FAMILY: 新宋体">&lt;/param&gt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN style="COLOR: gray">&lt;param 
name="sex"&gt;</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">性别；</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: gray; FONT-FAMILY: 新宋体">&lt;/param&gt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN style="COLOR: gray">&lt;param 
name="age"&gt;</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">年龄；</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: gray; FONT-FAMILY: 新宋体">&lt;/param&gt;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Student(<SPAN 
style="COLOR: blue">int</SPAN> sno, <SPAN style="COLOR: blue">string</SPAN> 
name, <SPAN style="COLOR: teal">ESex</SPAN> sex, <SPAN 
style="COLOR: blue">int</SPAN> age)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.Sno = sno;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.Name = name;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.Sex = sex;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.Age = age;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">构造函数一；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: gray">///</SPAN><SPAN 
style="COLOR: gray">&lt;/summary&gt;</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Student()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果使用部分类定义，这个关键字就是必须出现在每个包含部分类定的文件中。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">对于部分类，最后要注意一点是：应用于部分类的接口也会应用于整个类，也就是说，下面的两个定义是等价的：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">public partial class MyClass 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">： IMyInterface1</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">public partial class MyClass 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">： IMyInterface2</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">和</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">public partial class MyClass 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">： 
IMyInterface1，IMyInterface2</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">……</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">19.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">练习：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写代码，定义一个基类</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyClass</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，其中包含虚拟方法</SPAN><SPAN 
style="FONT-SIZE: 9pt">GetString()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。这个方法应返回有储在受保护字段</SPAN><SPAN 
style="FONT-SIZE: 9pt">myString</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中的字符串，该字段可以通过只写公共属性</SPAN><SPAN 
style="FONT-SIZE: 9pt">ContainedString </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">来访问。</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<SPAN style="COLOR: blue">public</SPAN> 
<SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">MyClass</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">private</SPAN> <SPAN 
style="COLOR: blue">string</SPAN> myString;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">string</SPAN> ContainedString</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">get</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<SPAN 
style="COLOR: blue">return</SPAN> myString;&nbsp;&nbsp; </SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
GetString()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">return</SPAN> 
myString;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">从类</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyCalss </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">中派生一个类</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyDerivedClass </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">。</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">重写</SPAN><SPAN 
style="FONT-SIZE: 9pt">GetString()</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法。使用该方法的基类执行代码从基类中返回一个字符串，但在返回的字符串中添加文本“</SPAN><SPAN 
style="FONT-SIZE: 9pt">(output from derivedclass)”.</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;<SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">class</SPAN> <SPAN style="COLOR: teal">MyDerivedClass</SPAN> 
: <SPAN style="COLOR: teal">MyClass</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">override</SPAN> <SPAN style="COLOR: blue">string</SPAN> 
GetString()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">return</SPAN> <SPAN 
style="COLOR: blue">base</SPAN>.GetString() + <SPAN 
style="COLOR: maroon">"(output from derivedclass)"</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">3)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">编写一个类</SPAN><SPAN 
style="FONT-SIZE: 9pt">MyCopyableClass,</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">该类可以使用方法</SPAN><SPAN 
style="FONT-SIZE: 9pt">GetCopy</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">返回它本身的一个副本。这个方法应使用派于</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Object</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的</SPAN><SPAN 
style="FONT-SIZE: 9pt">MemberwiseClone() </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">方法。给该类添加一简单的属性，并且编写客户代码，使用访类检查任务是否成功执行。</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">MyCopyableClass</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: teal">MyCopyableClass</SPAN> GetCopy()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">return</SPAN> 
(<SPAN style="COLOR: teal">MyCopyableClass</SPAN>)MemberwiseClone();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">测试代码：</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">MyCopyableClass</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> myCopyableClass = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">MyCopyableClass</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (<SPAN 
style="COLOR: blue">typeof</SPAN>(<SPAN 
style="COLOR: teal">MyCopyableClass</SPAN>)==myCopyableClass.GetCopy().GetType())</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">测试成功"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt">4)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">为扑克牌类库编写一个控制台程序，从搅乱的</SPAN><SPAN 
style="FONT-SIZE: 9pt">Deck</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">对像中一次取出</SPAN><SPAN 
style="FONT-SIZE: 9pt">5</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">张牌。如果这</SPAN><SPAN 
style="FONT-SIZE: 9pt">5</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">张牌都是相同的花色，客户程序就应在屏幕上显示这</SPAN><SPAN 
style="FONT-SIZE: 9pt">5</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">张牌，以及文本“</SPAN><SPAN 
style="FONT-SIZE: 9pt">Flush</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">！”，否则就显示</SPAN><SPAN 
style="FONT-SIZE: 9pt">50</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">张牌以及文本“</SPAN><SPAN 
style="FONT-SIZE: 9pt">No flush”, </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">并退出。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 13.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Deck</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> deck = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Deck</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
deck.Shuffle();&nbsp;&nbsp;&nbsp; </SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Card</SPAN>[] cards = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Card</SPAN>[5];</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Random</SPAN> random = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Random</SPAN>();&nbsp;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">for</SPAN> (<SPAN style="COLOR: blue">int</SPAN> i = 
0; i &lt; cards.Length; i++)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cards[i] = deck.GetCard(random.Next(52));</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(<SPAN 
style="COLOR: maroon">"{0}"t{1}"</SPAN>,(i+1),cards[i].ToString());</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </SPAN></P>
<P style="MARGIN-LEFT: 42pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;<SPAN 
style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体"><BR 
style="PAGE-BREAK-BEFORE: always" clear=all></SPAN>
<P 
style="MARGIN-LEFT: 78pt; TEXT-INDENT: -36pt; TEXT-ALIGN: center; tab-stops: list 78.0pt" 
align=center><SPAN style="FONT-SIZE: 9pt">第11章<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">集合、比较和转换</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">1.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">定制的集合可以是强类型化的，另一优点也可以提供专用的方法；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">2.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Collections</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">命名空间中有许多接口都提供了基本的集合功能：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">可以迭代集合中的项；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">ICollection</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（继承于</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）可以获取集合中项的个数，并能把项复制到一个简单的数组类型中。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">IList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（继承于</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerable </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
ICollection</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）提供了集合中的项列表，并可以访问这些项，以及其他一些与项列表相关的功能。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt">IDictionary</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">（继承于</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerable </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
ICollection</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">）类似于</SPAN><SPAN 
style="FONT-SIZE: 9pt">IList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，但提供了可通过键码值而不是索引访问的项列表；</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">System.Array 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">类实现了</SPAN><SPAN 
style="FONT-SIZE: 9pt">IList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，</SPAN><SPAN 
style="FONT-SIZE: 9pt">ICollection </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">和</SPAN><SPAN style="FONT-SIZE: 9pt"> 
IEnumerable </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">，但不支持</SPAN><SPAN 
style="FONT-SIZE: 9pt">IList </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">的一些更高级的功能，表示大小固定的项列表；</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">3.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">使用集合：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">System.Collection 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">命名空间中的一类</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Collection.ArratList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">也实现了</SPAN><SPAN 
style="FONT-SIZE: 9pt">IList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">ICollection</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">、</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumberable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">接口，但实现的方式比</SPAN><SPAN 
style="FONT-SIZE: 9pt">System.Array</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">更复杂。数组的大小是固定的（不能增加或删除元素），而这个类可以用于表示大小可变的项列表。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">ArrayList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">另一种定义：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">ArrayList</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> arrayList=<SPAN 
style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">ArrayList</SPAN>(int 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">容量)；</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">用一个</SPAN><SPAN 
style="FONT-SIZE: 9pt">int </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">值指定，设置集合中可以包含的项数，但是这并不是真实的容量，因为如果集合中的项数超过了这个值，容量就会自动增大一倍。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt">4.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">迭代器：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如果要迭代一个类，可使用方法</SPAN><SPAN 
style="FONT-SIZE: 9pt">GetEnmerator(),</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">其返回类型是</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerator.</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">如果要迭代一个类成员，例如一个方法，则使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">IEnumerable;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">在迭代器中，使用</SPAN><SPAN 
style="FONT-SIZE: 9pt">yield</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">关键字选择要在</SPAN><SPAN 
style="FONT-SIZE: 9pt">foreach</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">循循中使用的值，其语法如下：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt">yield return 
vaule;;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">一个简单的迭代器：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">static</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">void</SPAN> 
Main(<SPAN style="COLOR: blue">string</SPAN>[] args)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">foreach</SPAN> (<SPAN 
style="COLOR: blue">string</SPAN> item <SPAN style="COLOR: blue">in</SPAN> 
SimpleList())</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(item);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: teal">Console</SPAN>.ReadKey();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN 
style="COLOR: teal">IEnumerable</SPAN> SimpleList()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">yield</SPAN> <SPAN style="COLOR: blue">return</SPAN> 
<SPAN style="COLOR: maroon">"stirng 1"</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">yield</SPAN> <SPAN style="COLOR: blue">return</SPAN> 
<SPAN style="COLOR: maroon">"stirng 2"</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">yield</SPAN> <SPAN style="COLOR: blue">return</SPAN> 
<SPAN style="COLOR: maroon">"stirng 3"</SPAN>;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;}</SPAN></P>
<P><SPAN style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">一个带有迭代器的素数类：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">class</SPAN> 
<SPAN style="COLOR: teal">Primes</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">long</SPAN> 
max;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">private</SPAN> <SPAN style="COLOR: blue">long</SPAN> 
min;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Primes(<SPAN 
style="COLOR: blue">long</SPAN> minNum, <SPAN style="COLOR: blue">long</SPAN> 
maxNum)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.max = maxNum;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">this</SPAN>.min = minNum;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Primes():<SPAN 
style="COLOR: blue">this</SPAN>(2,100)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: teal">IEnumerator</SPAN> GetEnumerator()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">for</SPAN> (<SPAN style="COLOR: blue">long</SPAN> 
possiblePrime = min; possiblePrime &lt;= max; possiblePrime++)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">bool</SPAN> isPrimes = <SPAN 
style="COLOR: blue">true</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">for</SPAN> (<SPAN style="COLOR: blue">long</SPAN> 
possibleFactor = 2; possibleFactor &lt;= (<SPAN 
style="COLOR: blue">long</SPAN>)<SPAN 
style="COLOR: teal">Math</SPAN>.Floor(<SPAN 
style="COLOR: teal">Math</SPAN>.Sqrt(possiblePrime)); 
possibleFactor++)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">long</SPAN> remainderAfterDivision = possiblePrime % 
possibleFactor;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (remainderAfterDivision == 0)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
isPrimes = <SPAN style="COLOR: blue">false</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">break</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">if</SPAN> (isPrimes)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">yield</SPAN> <SPAN style="COLOR: blue">return</SPAN> 
possiblePrime;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体">调用代码：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 13.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Primes</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> primes = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Primes</SPAN>(2,1000);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: blue">foreach</SPAN> (<SPAN style="COLOR: blue">long</SPAN> item 
<SPAN style="COLOR: blue">in</SPAN> primes)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.Write(<SPAN style="COLOR: maroon">" {0} 
"</SPAN>,item);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;<SPAN style="COLOR: teal">Console</SPAN>.ReadKey();</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">迭代器和集合：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">class</SPAN> 
<SPAN style="COLOR: teal">Animals</SPAN>:<SPAN 
style="COLOR: teal">DictionaryBase</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Animals()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
Add(<SPAN style="COLOR: blue">string</SPAN> newID,<SPAN 
style="COLOR: teal">Animal</SPAN> newAnimal)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Dictionary.Add(newID, newAnimal);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> 
Remove(<SPAN style="COLOR: blue">string</SPAN> animalID)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Dictionary.Remove(animalID);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: teal">Animal</SPAN> 
<SPAN style="COLOR: blue">this</SPAN>[<SPAN style="COLOR: blue">string</SPAN> 
animalID]</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">get</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> (<SPAN 
style="COLOR: teal">Animal</SPAN>)Dictionary[animalID];</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">set</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Dictionary[animalID] = <SPAN style="COLOR: blue">value</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">new</SPAN> 
<SPAN style="COLOR: teal">IEnumerator</SPAN> GetEnumerator()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">foreach</SPAN> (<SPAN 
style="COLOR: blue">object</SPAN> animal <SPAN style="COLOR: blue">in</SPAN> 
Dictionary.Values)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">yield</SPAN> <SPAN style="COLOR: blue">return</SPAN> 
(<SPAN style="COLOR: teal">Animal</SPAN>)animal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">调用举例：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: 13.5pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: teal; FONT-FAMILY: 新宋体">Animals</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> animals = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Animals</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Animal</SPAN> animal = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Animal</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Chicken</SPAN> chicken = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN style="COLOR: teal">Chicken</SPAN>(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">公鸡"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Cow</SPAN> cow = <SPAN style="COLOR: blue">new</SPAN> 
<SPAN style="COLOR: teal">Cow</SPAN>(<SPAN 
style="COLOR: maroon">"</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: maroon; FONT-FAMILY: 新宋体">小蛮牛"</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
animals.Add(<SPAN style="COLOR: maroon">"95001"</SPAN>, animal);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
animals.Add(<SPAN style="COLOR: maroon">"95002"</SPAN>, chicken);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
animals.Add(<SPAN style="COLOR: maroon">"95003"</SPAN>, cow);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">foreach</SPAN> (<SPAN 
style="COLOR: teal">Animal</SPAN> item <SPAN style="COLOR: blue">in</SPAN> 
animals)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item.Feed();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-INDENT: 18pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
animals[<SPAN style="COLOR: maroon">"95001"</SPAN>].Feed();</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">5.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">深度复制：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">浅度复制如下：</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: 21pt; TEXT-ALIGN: left" 
align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">class</SPAN> 
<SPAN style="COLOR: teal">Cloner</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">int</SPAN> Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> 
Cloner(<SPAN style="COLOR: blue">int</SPAN> newVal)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Val = newVal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">object</SPAN> GetCopy()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <SPAN style="COLOR: blue">return</SPAN> 
MemberwiseClone();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">要实现深度复制，需实现ICloneable接口，该接口有一个方法Clone，这个方法不带参数，返回一个对象类。</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;<SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">Content</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;<SPAN style="COLOR: blue">public</SPAN> <SPAN 
style="COLOR: blue">class</SPAN> <SPAN style="COLOR: teal">Cloner</SPAN>:<SPAN 
style="COLOR: teal">ICloneable</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: teal">Content</SPAN> 
MyContent = <SPAN style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Content</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> Cloner(<SPAN 
style="COLOR: blue">int</SPAN> newVal)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
MyContent.Val= newVal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">object</SPAN> 
Clone()</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Cloner</SPAN> clonedCloner = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">Cloner</SPAN>(MyContent.Val);</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> clonedCloner;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">6.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">类型比较</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在比较对象时，常常需要知道它们的类型，这样才能确定是否可以进行值的比较，可以使用typeof运算符如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">if(Myobj.GetType()==typeof(MyComplexClass))</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; //myObj is an 
instance of the class MyComplexClass.</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">7.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">封箱和拆箱</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">封箱（boxing）是把值类型转换为System.Object类型，或者转换为由值类型实现的接口类型。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">拆箱（unboxing）是相反的转换过程。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">封箱是在没有用户干涉的情况下进行的（即不需要编写任何代码）。但拆箱一个值需要进行显式转换。即需要进行数据类型转换（封箱是隐式的，所以不需要进行数据类型转换）。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">封箱非常有用，有两个非常重要的原因。首先，它允许使用集合中的值类型（例如ArrayList），集合中项的类型是object。其次，有一个内部机制允许在值类型上调用object，例如int和结构。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">8.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">is</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">运算符：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">is</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">运算符并不是说明对象是某种类型的一种方式，而是可以检查对象是否是给定的类型，或者是否可以转换为给定的类，如果是，这个运算符就返回true。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">is 
</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">运算符的语法如下：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt; is 
&lt;type&gt;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这个表达式的结果如下：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果&lt;type&gt;是一个类类型，而&lt;operand&gt;也是该值类型，或者它继承了该类型，或者它封箱到该类型中，则结果是true;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果&lt;type&gt;是一个接口类型，而&lt;operand&gt;也是该类型，或者它是实现该接口的类型，则结果为true。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果&lt;type&gt;是一个值类型，而</SPAN>&nbsp;<SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">也是该类型，或者它被拆箱到该类型中，则结果为true。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">9.<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">值比较：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">可以用运算符或使用IComparable 和 IComparer 
接口，实现值比较，其中，后者可以用标准的方式定义比较对象的过程。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">要重载运算符，可给类添加运算符类型成员（它们必须是static）.</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">一个典型的运算符重载例子：</SPAN></P>
<P style="TEXT-INDENT: 21pt; TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">class</SPAN> 
<SPAN style="COLOR: teal">AddClass1</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> 
<SPAN style="COLOR: teal">AddClass1</SPAN> <SPAN 
style="COLOR: blue">operator</SPAN> +(<SPAN style="COLOR: teal">AddClass1</SPAN> 
op1, <SPAN style="COLOR: teal">AddClass1</SPAN> op2)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">AddClass1</SPAN> returnVal = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">AddClass1</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
returnVal.Val = op1.Val + op2.Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> returnVal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">测试代码：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">AddClass1</SPAN> add1 = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">AddClass1</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
add1.Val = 10;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">AddClass1</SPAN> add2 = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">AddClass1</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
add2.Val = 20;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">AddClass1</SPAN> add3 = add1 + add2;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(add3.Val);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">10.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">下述运算符可以重载：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">一元运算符：+,-,!,~,++,--,true,false;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">二元运算符：+,-,*,/,%,&amp;,|,^,&lt;&lt;,&gt;&gt;;</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">比较运算符：==,!=,&lt;,&gt;, 
&lt;=,&gt;=;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">不能重载赋值运算符，例如+=;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">也不能重载&amp;&amp; 和 || 
，但它们可以在计算中使用对应的运算符&amp;和|，所以重载&amp; 和|就足够了。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">一些运算符如&lt; 和 &gt; 必须成对重载。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">11.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">和IComparer接口：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">和IComparer接口是.net 
frameword中比较对像的标准方式，这两个对像的区别如下：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在要比较的对象的类中实现，可以比较该对象和另一个对象。</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparer </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在一个单独的类中实现，可以比较在任意两个对象。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparable</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">提供了一个方法CompareTo(),这个方法接受一个对象，所以可以实现它,如：</SPAN></P><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"><BR style="PAGE-BREAK-BEFORE: always" 
clear=all></SPAN>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">if( 
person1.CompareTo(person2)==0)</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
Console.WriteLine(</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">“Same 
age!</SPAN><SPAN style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">IComparer</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">也提供了一个方法Compare()，这个方法接受两个对象，返回一个整型结果，这与CompareTo()相同。如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">if(personComparer.Compare(peson1,peson2)==0)</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">{</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp; 
Console.WriteLine(</SPAN><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">“Same 
age!</SPAN><SPAN style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">);</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">.NET 
Framework </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">在类Compaer上提供了IComparer接口的默认实现方式，类型Comparer位于System.Collecions命名空间中，可以对简单类型以及支持IComparable 
接口的任意类型进行特定文化的比较。如：</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">string filetString=</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">First String</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">string secondStirng=</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Second String</SPAN><SPAN 
style="FONT-SIZE: 9pt">”</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">Comparer.Default.Compare(firstString,secondString);</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">使用Comparer 时需注意以下事项：</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">检查传送给Comparer.Compare()的对象，看看它们是否支持IComparable，如果支持，就使用该实现代码。</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">允许使用null值，它表示“小于”其它对象。</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">字符串根椐当前文化来处理，需根椐不同的文化（或语言）处理字符串，Comparer类必须用其构造函数进行实例化，以便传送指定文化的System.Globalization.CultureInfo对象。</SPAN></P>
<P style="MARGIN-LEFT: 63pt; TEXT-INDENT: -21pt; tab-stops: list 63.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">字符串在外理时要区分大小写，如果要以不区分大小写的方式来外理它们，就需要用CaseInsensitiveComparer类，该类以相同的方式工作。</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">12.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">重载转换运算符<BR>如：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 新宋体">public</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体"> <SPAN style="COLOR: blue">class</SPAN> 
<SPAN style="COLOR: teal">ConvClass1</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> 
Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">定义隐式转换；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> 
<SPAN style="COLOR: blue">implicit</SPAN> <SPAN 
style="COLOR: blue">operator</SPAN> <SPAN 
style="COLOR: teal">ConvClass2</SPAN>(<SPAN 
style="COLOR: teal">ConvClass1</SPAN> op1)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">ConvClass2</SPAN> returnVal = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">ConvClass2</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
returnVal.Val = op1.Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">return</SPAN> returnVal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; }</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">class</SPAN> <SPAN 
style="COLOR: teal">ConvClass2</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; {</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: teal">Double</SPAN> 
Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: green">//</SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; COLOR: green; FONT-FAMILY: 新宋体">定义显式转换；</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> 
<SPAN style="COLOR: blue">explicit</SPAN> <SPAN 
style="COLOR: blue">operator</SPAN> <SPAN 
style="COLOR: teal">ConvClass1</SPAN>(<SPAN 
style="COLOR: teal">ConvClass2</SPAN> op2)</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">ConvClass1</SPAN> returnVal = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">ConvClass1</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
returnVal.Val = (<SPAN style="COLOR: blue">int</SPAN>)op2.Val;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN 
style="COLOR: blue">return</SPAN> returnVal;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">}</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">测试示例：</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">ConvClass1</SPAN> op1 = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">ConvClass1</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
op1.Val = 3;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">ConvClass2</SPAN> op2 = op1;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN 
style="COLOR: teal">Console</SPAN>.WriteLine(op2.Val);&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;<SPAN style="COLOR: teal">ConvClass2</SPAN> op1 = <SPAN 
style="COLOR: blue">new</SPAN> <SPAN 
style="COLOR: teal">ConvClass2</SPAN>();</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
op1.Val = 3e15;</SPAN></P>
<P style="TEXT-ALIGN: left" align=left><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">ConvClass1</SPAN> op2 = (<SPAN 
style="COLOR: teal">ConvClass1</SPAN>)op1;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<SPAN style="COLOR: teal">Console</SPAN>.WriteLine(op2.Val);</SPAN></P>
<P style="MARGIN-LEFT: 21pt; TEXT-INDENT: -21pt; tab-stops: list 21.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">13.&nbsp;</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">as </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">运算符</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">as 
</SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">运算符使用下面的语法，把一种类型转换为指定的引用类型；</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt; as 
&lt;type&gt;</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">这只适用于下列情况：</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">的类型是&lt;type&gt;类型；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">可以隐式转换为&lt;type&gt;类型；</SPAN></P>
<P style="MARGIN-LEFT: 42pt; TEXT-INDENT: -21pt; tab-stops: list 42.0pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: Wingdings">l<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">&lt;operand&gt; </SPAN><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">可以封箱到类型&lt;type&gt;中。</SPAN></P>
<P style="MARGIN-LEFT: 21pt"><SPAN 
style="FONT-SIZE: 9pt; FONT-FAMILY: 新宋体">如果不能从&lt;operand&gt;转换为&lt;type&gt;，则表达式的结果为null。</SPAN></P>
<DIV id=digg_block>
<DIV id=author_profile>
<DIV class=author_profile_info>
<DIV class=author_profile_info><A href="http://home.cnblogs.com/zhanghuabin/" 
target=_blank>张华斌</A><BR>关注 - 0<BR>粉丝 - 0<BR></DIV></DIV>
<DIV class=clear></DIV>
<DIV id=author_profile_follow><A onclick="login();return false;" 
href="javascript:void(0);">关注博主</A></DIV></DIV>
<DIV id=div_digg>
<DIV class=diggit onclick=DiggIt(1186198,30652,1)><SPAN class=diggnum 
id=digg_count_1186198>0</SPAN> </DIV>
<DIV class=buryit onclick=DiggIt(1186198,30652,2)><SPAN class=burynum 
id=bury_count_1186198>0</SPAN> </DIV>
<DIV class=clear></DIV><SPAN id=span_isdigged_1186198 
style="DISPLAY: none">0</SPAN> 
<DIV class=diggword id=digg_word_1186198>(请您对文章做出评价)</DIV></DIV></DIV>
<DIV class=clear></DIV>
<DIV id=post_next_prev><A 
href="http://www.cnblogs.com/zhanghuabin/archive/2008/12/24/1361307.html">» 
</A>下一篇：<A title="发布于2008-12-24 13:37" 
href="http://www.cnblogs.com/zhanghuabin/archive/2008/12/24/1361307.html">Beginning 
Visual C# 入门经典笔记</A><BR></DIV>
<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/google_service.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
    try {
        GS_googleAddAdSenseService("ca-pub-4210569241504288");
        GS_googleEnableAllServices();
    }
    catch (e) { }
</SCRIPT>

<SCRIPT type=text/javascript>
    try {
        GA_googleAddSlot("ca-pub-4210569241504288", "cnblogs_blogpost_body");
        GA_googleAddSlot("ca-pub-4210569241504288", "cnblogs_commentbox_up");
        GA_googleAddSlot("ca-pub-4210569241504288", "cnblogs_blogpost_bottom");
        GA_googleAddSlot("ca-pub-4210569241504288", "cnblogs_blogpost_bottom1");
    }
    catch (e) { }
</SCRIPT>

<SCRIPT type=text/javascript>
    try {
        GA_googleFetchAds();
    } catch (e) { }
</SCRIPT>

<SCRIPT type=text/javascript>
    var blog_ad_has_shown = false;
    var cb_c_u_id = '';
    var cb_blog_uid = 'c4833d0b-63cf-dd11-9e4d-001cf0cd104b';
</SCRIPT>

<DIV class=postDesc>posted on 2008-05-07 09:05 <A 
href="http://www.cnblogs.com/zhanghuabin/">张华斌</A> 阅读(621) <A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">评论(6)</A> 
&nbsp;<A 
href="http://www.cnblogs.com/zhanghuabin/admin/EditArticles.aspx?postid=1186198">编辑</A> 
<A onclick="AddToWz(1186198);return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#">收藏</A> 所属分类: <A 
href="http://www.cnblogs.com/zhanghuabin/category/119306.html">.net技术</A></DIV></DIV><IMG 
height=1 src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/1186198.jpg" 
width=1> <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://www.cnblogs.com/zhanghuabin/articles/1186198.html"
dc:identifier="http://www.cnblogs.com/zhanghuabin/articles/1186198.html"
dc:title=""
trackback:ping="http://www.cnblogs.com/zhanghuabin/services/trackbacks/1186198.aspx" />
</rdf:RDF>
--><A name=pagedcomment></A><!--done--><BR>
<DIV class=feedback_area_title>发表评论</DIV>
<DIV class=feedbackNoItems><SPAN id=span_comment_maxid 
style="DISPLAY: none">1577810</SPAN></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("rays",1332185,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1332185,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl00_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl00$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl00_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1332185">#1楼</A><A 
id=comment_anchor_1332185 name=1332185></A> 2008-10-05 21:19 | <A 
class=feedbackmanagelink id=Comments1_CommentList_ctl00_NameLink 
target=_blank>rays[未注册用户]</A> </DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1332185>谢谢！！</SPAN><BR></DIV></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("gordon.kung",1356734,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1356734,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl01_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl01$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl01_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1356734">#2楼</A><A 
id=comment_anchor_1356734 name=1356734></A> 2008-10-30 23:10 | <A 
class=feedbackmanagelink id=Comments1_CommentList_ctl01_NameLink 
target=_blank>gordon.kung[未注册用户]</A> </DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1356734>非常感谢，就是找这个练习答案</SPAN><BR></DIV></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("samzero111",1533173,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1533173,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl02_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl02$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl02_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1533173">#3楼</A><A 
id=comment_anchor_1533173 name=1533173></A> 2009-05-20 17:21 | <A 
class=feedbackmanagelink id=Comments1_CommentList_ctl02_NameLink 
target=_blank>samzero111[未注册用户]</A> </DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1533173>感谢,不过貌似ch3answer5的答案错了吧? <BR><BR>我的答案: <BR>//定义整型变量; 
<BR>int num0, num1, num2, num3; <BR>//开始输入值; <BR>Console.WriteLine("请输入第1个整数:"); 
<BR>num0 = Convert.ToInt32(Console.ReadLine()); 
<BR>Console.WriteLine("请输入第2个整数:"); <BR>num1 = 
Convert.ToInt32(Console.ReadLine()); <BR>Console.WriteLine("请输入第3个整数:"); 
<BR>num2 = Convert.ToInt32(Console.ReadLine()); 
<BR>Console.WriteLine("请输入第4个整数:"); <BR>num3 = 
Convert.ToInt32(Console.ReadLine()); <BR>//输出结果; 
<BR>Console.WriteLine("它们的积是:{0}.", (num0 * num1 * num2 * num3)); 
<BR>Console.ReadKey();</SPAN><BR></DIV></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("qqqpppggg",1533182,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1533182,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl03_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl03$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl03_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1533182">#4楼</A><A 
id=comment_anchor_1533182 name=1533182></A> 2009-05-20 17:27 | <A 
class=feedbackmanagelink id=Comments1_CommentList_ctl03_NameLink 
target=_blank>qqqpppggg[未注册用户]</A> </DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1533182>不错,谢谢,呵呵</SPAN><BR></DIV></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("第五章练习的第7题答案",1546406,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1546406,"")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl04_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl04$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl04_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1546406">#5楼</A><A 
id=comment_anchor_1546406 name=1546406></A> 2009-06-03 11:47 | <A 
class=feedbackmanagelink id=Comments1_CommentList_ctl04_NameLink 
target=_blank>第五章练习的第7题答案[未注册用户]</A> </DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1546406>using System; <BR>using System.Collections.Generic; 
<BR>using System.Text; <BR><BR>namespace Ch05Ex05 <BR>{ <BR>class Program <BR>{ 
<BR>static void Main(string[] args) <BR>{ <BR>string myString = null; 
//定义一个string变量并赋值null <BR>Console.WriteLine("输入一个字符串:"); <BR>myString = 
Console.ReadLine(); <BR>char[] separator = { ' ' }; //定义一个char数组,数组内只有一个元素,值为空格 
<BR>string[] myWords; //定义mywords数组 <BR>myWords = myString.Split(separator); 
//使用对字符串处理的split功能,分割每个单词. <BR>foreach (string word in myWords) <BR>{ 
<BR>Console.Write("\"{0}\"", word); <BR>} <BR>Console.ReadKey(); <BR>} <BR>} 
<BR>} <BR></SPAN><BR></DIV></DIV>
<DIV class=feedbackItem>
<DIV class=feedbackListSubtitle>
<DIV class=feedbackManage>&nbsp;&nbsp;<A 
onclick='ReplyComment("海风1998",1577810,"5mc5PYq8+Jo5a7d2YY+/Lue43EisilV0u+e77W1wr9FG42YQa/JBNw==")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">回复</A>&nbsp;&nbsp;<A 
onclick='QuoteComment(1577810,"5mc5PYq8+Jo5a7d2YY+/Lue43EisilV0u+e77W1wr9FG42YQa/JBNw==")' 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#commentform">引用</A>&nbsp;&nbsp;<A 
title=查看该作者发表过的评论 
href="http://www.cnblogs.com/CommentsByAuthor.aspx?author=%e6%b5%b7%e9%a3%8e1998" 
target=_blank>查看</A>&nbsp;&nbsp;<A id=Comments1_CommentList_ctl05_DeleteLink 
href="javascript:__doPostBack('Comments1$CommentList$ctl05$DeleteLink','')"></A>&nbsp;&nbsp;<A 
id=Comments1_CommentList_ctl05_EditLink CausesValidation="False"></A> </DIV><A 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1577810">#6楼</A><A 
id=comment_anchor_1577810 name=1577810></A><A name=Post></A> 2009-07-07 14:50 | 
<A class=feedbackmanagelink id=Comments1_CommentList_ctl05_NameLink 
href="http://www.cnblogs.com/haifeng19988/" target=_blank>海风1998</A>&nbsp;<A 
class=sendMsg2This title=给此人发送站内短消息 
href="http://space.cnblogs.com/msg/send/æµ·é£1998">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</A> 
</DIV>
<DIV class=feedbackCon><SPAN class=blog_comment_body 
id=comment_body_1577810>第10章的第1个练习题答案不正确。</SPAN><BR></DIV></DIV>
<SCRIPT type=text/javascript>
    var commentAuthorHasChecked = false;
    var commentAuthorIsValid = false;
    var commentUrlIsValid = true;
    var commentEmailIsValid = true;
    var authenCodeHasChecked = false;
    var authenCodeIsValid = true;
    var hasLogined = false;
    
    function PostComment() {    
        
        var isValid = true;
        
        if($("#wrapAuthenCode").css("display")=="none"){
            ShowAuthenCode();
            $("#tip_AuthenCode").css("color","red");
            $("#tip_AuthenCode").html("请输入验证码！");
            isValid = false;
        }
        
        if(!hasLogined && !commentAuthorHasChecked){
            CheckAuthor();        
        }                
        if(!hasLogined && !commentAuthorIsValid){
            isValid = false;
        }
                       
        if(!authenCodeHasChecked){
            CheckAuthenCode();            
        }
        if(!authenCodeIsValid){
            isValid = false;
        }
        
        if(!hasLogined && !commentUrlIsValid){            
            isValid = false;
        }        
        if(!commentEmailIsValid){            
            isValid = false;
        }        
        if(!CheckCommentContent()){
            isValid = false;
        }    
        if(!isValid){
            return;
        }

        var content = $("#tbCommentBody").val();
        if(content.length>2000){
            alert("评论内容过长！不允许发布！");
            return;
        }     
        
        if(content.indexOf("　Ｅ　　　　　　　　　Ｅ　　　　　　　　　　Ｅ　　　　　　")>=0){
            alert("该内容不允许布！");
            return;
        }   
        
       if ($("#span_comment_posted").html()!='' && $("#span_comment_posted").html()==content){
            alert("该评论已发表过!");
            return;
        }
        
        $("#tip_comment").html("评论提交中...");
        $("#span_comment_posted").html(content);
        //content = content.replace("'", "\\'");
        var email = $("#tbCommentEmail").val();
        var authenNum = $("#tbAuthenCode").val();
        var authenId = $("#span_comment_test").html();
        var comment = {};
        comment.authenNum = authenNum;
        comment.authenId= authenId;
        comment.parentId = 0;
        comment.blogId = 0;
        comment.sourceUrl = '';
        comment.author = $("#tbCommentAuthor").val();
        comment.url = $("#tbCommentAuthorUrl").val();
        comment.authenCode = $("#tbAuthenCode").val();
        comment.email = email;
        comment.title = '';
        comment.content = content;
        comment.parentCommentId = $("#span_parentcomment_id").html();
        $.ajax({
            url: '/ws/CommentService.asmx/AddAnonymousComment',
            data: $.toJSON(comment),
            type: "post",
            dataType: "json",
            contentType: "application/json; charset=utf8",
            success: function(data) {
               if (data.d["IsSuccess"]) {
                    ShowCommentMsg("感谢您的回复:)");
                    //RereshComments2(comment.parentId);
                    $("#tbCommentBody").val('');
                    //$("#divCommentShow").html(data.d["ReturnData"]+content.replace(/\n/g,"<br/>")+"<br/><br/>");
                    $("#divCommentShow").html($("#divCommentShow").html()+data.d["ReturnData"]); 
                    $("#tip_AuthenCode").html('');
                    RefreshAuthenCode();
                    $("#tbAuthenCode").val("");                    
                    CommentNotify(data.d["CommentID"]);
                }
                else {
                    ShowCommentMsg(data.d["ReturnData"]);//"抱歉！评论提交失败！请与管理员联系。");
                    $("#span_comment_posted").html(''); 
                }
            },
            error: function(xhr) {
                ShowCommentMsg("抱歉！评论提交失败！请与管理员联系。");
                $("#span_comment_posted").html('');  
                //alert(xhr.responseText);
            }
        }
        );
    }
    
    function RefreshAuthenCode(){
        AjaxPost("/ws/CommentService.asmx/RefreshAuthenCode","{}",RefreshImg); 
        $("#lnkRereshAuthenCode").html("<span style='color:red'>刷新中...</span>");
        return false;
    }
    
    function RefreshImg(response){
       $("#imgAuthenCode").attr("src","/Modules/CaptchaImage/ValidCodeImage.aspx?id="+encodeURIComponent(response));
       $("#span_comment_test").html(response);
       $("#lnkRereshAuthenCode").html("看不清，换一个");
    }
    
    function ShowAuthenCode(){
        //if($("#wrapAuthenCode").css("display")=="none"){    
        //    AjaxPost("/ws/CommentService.asmx/RefreshAuthenCode","{}",ShowAuthenCodeOk);
        //}
        $("#wrapAuthenCode").show();      
    }
    
    function ShowAuthenCodeOk(response){
         UpdateAuthenCode();
         $("#tbAuthenCode").val("");
         $("#wrapAuthenCode").show();
         $("#tip_AuthenCode").html('');
    }  
 
    
    function CheckAuthor(isOnblur){
        commentAuthorHasChecked = true;
        var maxLength = 30;
        if($("#tbCommentAuthor").val().length == 0){
            $("#tip_author").html("请输入您的昵称！");
            commentAuthorIsValid = false;
            return false;
        }     
        else if($("#tbCommentAuthor").val().length > maxLength){
            $("#tip_author").html("昵称不允许超过" + maxLength + "个字符！");
            commentAuthorIsValid = false;
            return false;
        }
        else{
            //if(isOnblur){
                AjaxPost("/ws/CommentService.asmx/IsAuthorExist","{author:'"+$("#tbCommentAuthor").val()+"'}" ,OnCheckAuthorExist);
            //}
            //else{
            //    $("#tip_author").html("");
            //    commentAuthorIsValid = true;
            //}
            return true;
        }
   }
   
    function OnCheckAuthorExist(response){        
        if(!response){
            $("#tip_author").html("");
            commentAuthorIsValid = true;
        }
        else{
            $("#tip_author").html("该昵称已被使用，请更换昵称");
            commentAuthorIsValid = false;
        }
   }
   
    function CheckUrl(){
        var maxLength = 50;
        var url = $("#tbCommentAuthorUrl").val();
        
        if(url.length == 0){
            commentUrlIsValid = true;
            return true;
        }
        else if(url.length > maxLength){
            $("#tip_url").html("主页地址不允许超过" + maxLength + "个字符！");
            commentUrlIsValid = false;
            return false;
        }
        else if(url.indexOf("http://")!=0 || url.indexOf(".") < 0){
            $("#tip_url").html("主页地址要以“http://”开头");
            commentUrlIsValid = false;
            return false;
        }
        else{
            $("#tip_url").html("");
            commentUrlIsValid = true;
            return true;
        }
   }
   
   function CheckEmail(){
        var email = $("#tbCommentEmail").val();
        if(email.length>0){
            var regExp = new RegExp("\\w+@((\\w|\-)+\\.)+[a-z]{2,3}");
            if(!regExp.test(email)){
                $("#tip_email").html("请输入正确的邮件地址!");
                commentEmailIsValid = false;
            }
            else{
                commentEmailIsValid = true;
                 $("#tip_email").html("");
            }
        }
        else{
            commentEmailIsValid = true;
            $("#tip_email").html("");  
        }
   }
   
   function CheckAuthenCode(){
        authenCodeHasChecked = true;
        var num = $("#tbAuthenCode").val();
        var id = $("#span_comment_test").html();
        $("#tip_AuthenCode").css("color","red");
        if(num.length==0){
             authenCodeIsValid = false;
             $("#tip_AuthenCode").html("请输入验证码！");
             return;
        }
        else if(num.length!=4){
            authenCodeIsValid = false;
            $("#tip_AuthenCode").html("请输入四位数字！");
             return;
        }
        else if(new RegExp("(\d+)").test(num)){
            authenCodeIsValid = false;
            $("#tip_AuthenCode").html("请输入四位数字！");
             return;
        }
        else{
            AjaxPost("/ws/CommentService.asmx/CheckAuthenCode","{number:"+num+",id:'"+id+"'}", OnCheckAuthenCode);
        }
   }
   
   function OnCheckAuthenCode(response){
        if(response){
            $("#tip_AuthenCode").css("color","green");
            $("#tip_AuthenCode").html("验证码输入正确！");
            authenCodeIsValid = true;            
        }
        else{
            $("#tip_AuthenCode").css("color","red");
            $("#tip_AuthenCode").html("验证码输错啦！");
            RefreshAuthenCode();
            authenCodeIsValid = false;           
        }
   }
   
   function CheckCommentContent(){
    if($("#tbCommentBody").val().length==0){
        alert("请输入评论内容！");
        return false;
    }
    return true;
   }
    
</SCRIPT>

<DIV class=commentform id=ctl05_comment_form>
<DIV id=ctl05_divLoginPannel>
<DIV class=login_tips>注册用户登录后才能发表评论，请 <A class=underline 
href="http://passport.cnblogs.com/login.aspx?ReturnUrl=http%3a%2f%2fwww.cnblogs.com%2fzhanghuabin%2farticles%2f1186198.html%3flogin%3d1%23commentform">登录</A> 
或 <A class=underline 
href="http://passport.cnblogs.com/register.aspx?ReturnUrl=http%3a%2f%2fwww.cnblogs.com%2fzhanghuabin%2farticles%2f1186198.html%23Bottom2">注册</A> 
。</DIV>
<DIV style="MARGIN-TOP: 5px"><A href="http://www.cnblogs.com/" 
target=_blank>返回博客园首页</A></DIV></DIV>
<DIV class="itnews c_ad_block"><A href="http://job.cnblogs.com/offer/7427/" 
target=_blank>沪江网招聘ASP.NET开发工程师</A><BR><A href="http://a4.yeshj.com/rd/35450/" 
target=_blank>软件研发团队管理年会(上海，7.10-7.11)</A><BR><A href="http://news.cnblogs.com/" 
target=_blank>IT新闻</A>:<BR>· <A href="http://news.cnblogs.com/n/65604/" 
target=_blank>硅谷战争</A><BR>· <A href="http://news.cnblogs.com/n/65603/" 
target=_blank>微软宣布新一代Windows Live Essentials</A><BR>· <A 
href="http://news.cnblogs.com/n/65602/" target=_blank>周鸿祎：企业家要放下身段写微博</A><BR>· 
<A href="http://news.cnblogs.com/n/65601/" target=_blank>eBay 
CEO：移动支付将成未来主流</A><BR>· <A href="http://news.cnblogs.com/n/65600/" 
target=_blank>Metcalfe博客：开启.com的时代</A><BR></DIV>
<DIV class=c_ad_block><A href="http://a4.yeshj.com/rd/34138/" 
target=_blank>每天10分钟，轻松学英语</A>&nbsp;&nbsp;<A 
href="http://a4.yeshj.com/rd/35140/" target=_blank>沪江网校</A><BR>
<DIV style="MARGIN-TOP: 5px">
<SCRIPT type=text/javascript>
    try {
        GA_googleFillSlot("cnblogs_blogpost_bottom");
    }
    catch (e) { }
</SCRIPT>
</DIV>
<DIV style="MARGIN-TOP: 5px"><A 
href="http://www.feifanit.com.cn/productFlow.htm" target=_blank><IMG alt="" 
src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/e8_net_468x60.gif"></A></DIV>
<DIV class="itnews c_ad_block" id=job_block><A href="http://job.cnblogs.com/" 
target=_blank>推荐职位</A>:<BR>
<DIV id=job_list></DIV>
<SCRIPT type=text/javascript>
    try {
        GetJobList();
    } catch (e) { }
</SCRIPT>
</DIV></DIV>
<DIV class=c_ad_block id=site_nav_under>网站导航：<BR><A 
href="http://www.cnblogs.com/" target=_blank>博客园首页</A> &nbsp;<A 
href="http://news.cnblogs.com/" target=_blank>IT新闻</A> &nbsp;<A 
href="http://home.cnblogs.com/" target=_blank>个人主页</A> &nbsp;<A 
href="http://home.cnblogs.com/ing/" target=_blank>闪存</A> &nbsp;<A 
href="http://job.cnblogs.com/" target=_blank>程序员招聘</A> &nbsp;<A 
href="http://space.cnblogs.com/" target=_blank>社区</A> &nbsp;<A 
href="http://space.cnblogs.com/q/" target=_blank>博问</A> </DIV>
<DIV class=c_ad_block id=ad_under_comment2><A 
href="http://www.china-pub.com/STATIC07/0912/zh_ndcx_091212.asp" 
target=_blank><IMG 
style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px" 
alt="" 
src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/china_pub_20100322.jpg"></A><BR><A 
href="http://www.china-pub.com/itbook/" target=_blank>China-pub 
计算机图书网上专卖店！6.5万品种2-8折！</A><BR><A 
href="http://www.china-pub.com/static07/0901/zh_jueba_090121.asp" 
target=_blank>China-Pub 计算机绝版图书按需印刷服务</A><BR></DIV>
<DIV id=relative_search><BR><B>相关搜索:</B><BR><A 
href="http://zzk.cnblogs.com/s?w=.net%e6%8a%80%e6%9c%af" 
target=_blank>.net技术</A> </DIV>
<DIV id=relative_search><BR><B>在知识库中查看：</B><BR><A 
href="http://kb.cnblogs.com/a/1186198/">Beginning Visual C# 
入门经典笔记</A></DIV></DIV></DIV></DIV><!-- left ends --><!-- right starts -->
<DIV id=right><!-- 右侧工具部分 -->
<DIV id=right_content><!--done-->
<H1 class=listtitle>公告</H1>
<DIV class=newsItem>我就是这儿的主人。&nbsp;&nbsp; 
<P _extended="true">&nbsp;&nbsp; <FONT face=Verdana 
_extended="true">每次，我如漂浮的游魂进出此地，我无力去张望别人注视的。我看似超凡脱俗，骨子里却永远留有无法蜕变的“俗”的本质。我感到惭愧。</FONT></P>
<P _extended="true"><FONT face=Verdana _extended="true">&nbsp;&nbsp;&nbsp; 
人世间已太多不如意，我不愿意随波逐流荒渡余生，我渴望精彩，渴望超越，而又不想失去自己，因此，我便比别人多的对周围观察的细小的神经，而我就被自己累得无法喘息及时常伤痕遍体。我只能这样对自己解释。</FONT></P>
<P _extended="true"><FONT face=Verdana _extended="true">&nbsp;&nbsp;&nbsp; 
平静中拥有生命的质和感悟的量，温婉怡情地走过这世界，我将感到无愧。超越了灵魂，不论身在丛林，还是禅寺，都会与朝阳和菩提在一起。</FONT></P>
<P _extended="true"><FONT face=Verdana _extended="true">&nbsp;&nbsp;&nbsp; 
每一段文字，倾吐了每一段真实的感情，每次下笔，浪漫总伴着心痛流露。如果你读懂了如此杂乱的思绪，不要笑我痴狂…同愿朋友们：祥和、浪漫一生。</FONT></P>
<P _extended="true"><FONT face=Verdana _extended="true">&nbsp;&nbsp;&nbsp; 
关于我的其它故事，以后再慢慢告诉你！</FONT></P>
<DIV id=articleLink _extended="true"><A 
href="http://blog.sina.com.cn/s/blog_4c168763010008v2.html" target=_blank 
_extended="true"></A>&nbsp;</DIV>
<DIV id=profile_block><A href="http://home.cnblogs.com/zhanghuabin/" 
target=_blank>我的主页</A>&nbsp; <A 
href="http://home.cnblogs.com/zhanghuabin/detail/" target=_blank>个人资料</A><BR><A 
href="http://home.cnblogs.com/zhanghuabin/ing/" target=_blank>我的闪存</A>&nbsp; <A 
href="http://space.cnblogs.com/msg/send/å¼&nbsp;åæ" 
target=_blank>发短消息</A></DIV></DIV>
<DIV id=calendar>
<TABLE class=Cal id=Calendar1_entryCal title=Calendar 
style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; COLOR: darkgray; BORDER-BOTTOM: 0px; BORDER-COLLAPSE: collapse" 
cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD style="BACKGROUND-COLOR: white" colSpan=7>
      <TABLE class=CalTitle 
      style="WIDTH: 100%; COLOR: darkgray; BORDER-COLLAPSE: collapse" 
      cellSpacing=0 border=0>
        <TBODY>
        <TR>
          <TD class=CalNextPrev style="WIDTH: 15%"><A 
            title="Go to the previous month" style="COLOR: darkgray" 
            href="javascript:__doPostBack('Calendar1$entryCal','V3773')">&lt;</A></TD>
          <TD style="WIDTH: 70%" align=middle>2010年6月</TD>
          <TD class=CalNextPrev style="WIDTH: 15%" align=right><A 
            title="Go to the next month" style="COLOR: darkgray" 
            href="javascript:__doPostBack('Calendar1$entryCal','V3834')">&gt;</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TH class=CalDayHeader scope=col align=middle abbr=日>日</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=一>一</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=二>二</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=三>三</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=四>四</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=五>五</TH>
    <TH class=CalDayHeader scope=col align=middle abbr=六>六</TH></TR>
  <TR>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>30</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>31</TD>
    <TD style="WIDTH: 14%" align=middle>1</TD>
    <TD style="WIDTH: 14%" align=middle>2</TD>
    <TD class=CalTodayDay style="WIDTH: 14%" align=middle>3</TD>
    <TD style="WIDTH: 14%" align=middle>4</TD>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>5</TD></TR>
  <TR>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>6</TD>
    <TD style="WIDTH: 14%" align=middle>7</TD>
    <TD style="WIDTH: 14%" align=middle>8</TD>
    <TD style="WIDTH: 14%" align=middle>9</TD>
    <TD style="WIDTH: 14%" align=middle>10</TD>
    <TD style="WIDTH: 14%" align=middle>11</TD>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>12</TD></TR>
  <TR>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>13</TD>
    <TD style="WIDTH: 14%" align=middle>14</TD>
    <TD style="WIDTH: 14%" align=middle>15</TD>
    <TD style="WIDTH: 14%" align=middle>16</TD>
    <TD style="WIDTH: 14%" align=middle>17</TD>
    <TD style="WIDTH: 14%" align=middle>18</TD>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>19</TD></TR>
  <TR>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>20</TD>
    <TD style="WIDTH: 14%" align=middle>21</TD>
    <TD style="WIDTH: 14%" align=middle>22</TD>
    <TD style="WIDTH: 14%" align=middle>23</TD>
    <TD style="WIDTH: 14%" align=middle>24</TD>
    <TD style="WIDTH: 14%" align=middle>25</TD>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>26</TD></TR>
  <TR>
    <TD class=CalWeekendDay style="WIDTH: 14%" align=middle>27</TD>
    <TD style="WIDTH: 14%" align=middle>28</TD>
    <TD style="WIDTH: 14%" align=middle>29</TD>
    <TD style="WIDTH: 14%" align=middle>30</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>1</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>2</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>3</TD></TR>
  <TR>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>4</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>5</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>6</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>7</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>8</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" align=middle>9</TD>
    <TD class=CalOtherMonthDay style="WIDTH: 14%" 
align=middle>10</TD></TR></TBODY></TABLE></DIV>
<DIV id=leftcontentcontainer>
<SCRIPT type=text/javascript>
var blogapp = 'zhanghuabin';
</SCRIPT>

<DIV class=mySearch>
<H3 class=catListTitle>搜索</H3>
<DIV class=div_my_zzk><INPUT class=input_my_zzk id=q 
onkeydown="return zzk_go_enter(event);">&nbsp;<INPUT class=btn_my_zzk id=btnZzk onclick=zzk_go() type=button value=找找看></DIV></DIV>
<H3>常用链接</H3>
<UL>
  <LI><A id=SingleColumn1_ctl02_rptMainLinks_ctl00_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/MyPosts.html">我的随笔</A> 
  <LI><A id=SingleColumn1_ctl02_rptMainLinks_ctl01_lnkLinkItem 
  href="http://home.cnblogs.com/zhanghuabin/">我的空间</A> 
  <LI><A id=SingleColumn1_ctl02_rptMainLinks_ctl02_lnkLinkItem 
  href="http://space.cnblogs.com/msg/recent">我的短信</A> 
  <LI><A id=SingleColumn1_ctl02_rptMainLinks_ctl03_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/MyComments.html">我的评论</A> 
  <LI><A id=itemListLink 
  onclick="this.blur();WarpClass('itemListLink', 'itemListLin_con');return false;" 
  href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#">更多链接</A> 
</LI></UL>
<DIV id=itemListLin_con style="DISPLAY: none">
<UL>
  <LI><A id=SingleColumn1_ctl02_repeaterLinks_ctl01_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/MyArticles.html">我的文章</A> 
  <LI><A id=SingleColumn1_ctl02_repeaterLinks_ctl02_lnkLinkItem title=我发表过评论的随笔 
  href="http://www.cnblogs.com/zhanghuabin/OtherPosts.html">我的参与</A> 
  <LI><A id=SingleColumn1_ctl02_repeaterLinks_ctl03_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/MyNews.html">我的新闻</A> 
  <LI><A id=SingleColumn1_ctl02_repeaterLinks_ctl04_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/RecentComments.html">最新评论</A> 
  <LI><A id=SingleColumn1_ctl02_repeaterLinks_ctl05_lnkLinkItem 
  href="http://www.cnblogs.com/zhanghuabin/tag/">我的标签</A> </LI></UL></DIV><!--done-->
<H1 class=catListTitle>随笔档案</H1>
<DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_Link 
href="http://www.cnblogs.com/zhanghuabin/archive/2008/12.html">2008年12月 (1)</A> 
</DIV></DIV>
<H1 class=catListTitle>文章分类</H1>
<DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl01_Link 
href="http://www.cnblogs.com/zhanghuabin/category/119306.html">.net技术(1)</A><A 
class=listitem id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl01_RssLink 
title="Subscribe to .net技术(1)" 
onclick="open_link('http://www.cnblogs.com/zhanghuabin/category/119306.html/rss');return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html###"><IMG 
title="Subscribe to .net技术(1)" 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="H:\技术文章\C#\Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files\xml(1).gif"></A> 
</DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl02_Link 
href="http://www.cnblogs.com/zhanghuabin/category/119307.html">C\C++技术</A><A 
class=listitem id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl02_RssLink 
title="Subscribe to C\C++技术" 
onclick="open_link('http://www.cnblogs.com/zhanghuabin/category/119307.html/rss');return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html###"><IMG 
title="Subscribe to C\C++技术" 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="H:\技术文章\C#\Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files\xml(1).gif"></A> 
</DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl03_Link 
href="http://www.cnblogs.com/zhanghuabin/category/119309.html">GIS技术</A><A 
class=listitem id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl03_RssLink 
title="Subscribe to GIS技术" 
onclick="open_link('http://www.cnblogs.com/zhanghuabin/category/119309.html/rss');return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html###"><IMG 
title="Subscribe to GIS技术" 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="H:\技术文章\C#\Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files\xml(1).gif"></A> 
</DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl04_Link 
href="http://www.cnblogs.com/zhanghuabin/category/119308.html">Java技术</A><A 
class=listitem id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl04_RssLink 
title="Subscribe to Java技术" 
onclick="open_link('http://www.cnblogs.com/zhanghuabin/category/119308.html/rss');return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html###"><IMG 
title="Subscribe to Java技术" 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="H:\技术文章\C#\Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files\xml(1).gif"></A> 
</DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl05_Link 
href="http://www.cnblogs.com/zhanghuabin/category/119310.html">心情故事</A><A 
class=listitem id=SingleColumn1_Categories_CatList_ctl01_LinkList_ctl05_RssLink 
title="Subscribe to 心情故事" 
onclick="open_link('http://www.cnblogs.com/zhanghuabin/category/119310.html/rss');return false;" 
href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html###"><IMG 
title="Subscribe to 心情故事" 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="H:\技术文章\C#\Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files\xml(1).gif"></A> 
</DIV></DIV>
<H1 class=catListTitle>相册</H1>
<DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl02_LinkList_ctl01_Link 
href="http://www.cnblogs.com/zhanghuabin/gallery/119311.html">成长岁月</A> </DIV>
<DIV class=catList><A class=listitem 
id=SingleColumn1_Categories_CatList_ctl02_LinkList_ctl02_Link 
href="http://www.cnblogs.com/zhanghuabin/gallery/119312.html">成长岁月</A> 
</DIV></DIV>
<H3 class=catListTitle>最新评论 <A id=SingleColumn1__4ab3c8_RSSHyperlink1 
href="http://www.cnblogs.com/zhanghuabin/CommentsRSS.aspx"><IMG 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/xml.gif"></A></H3>
<DIV class=RecentComment id=RecentComments>
<UL>
  <LI style="WORD-BREAK: break-all"><A 
  id=SingleColumn1__4ab3c8_CommentList_ctl01_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1577810">1.&nbsp;Re:Beginning 
  Visual C# 入门经典笔记</A> 
  <LI style="WORD-BREAK: break-all">第10章的第1个练习题答案不正确。 
  <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--海风1998 
  <LI style="WORD-BREAK: break-all"><A 
  id=SingleColumn1__4ab3c8_CommentList_ctl02_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1546406">2.&nbsp;re: 
  Beginning Visual C# 入门经典笔记</A> 
  <LI style="WORD-BREAK: break-all">using System; using 
  System.Collections.Generic; using System.Text; namespace Ch05Ex05 { class P... 

  <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--第五章练习的第7题答案 
  <LI style="WORD-BREAK: break-all"><A 
  id=SingleColumn1__4ab3c8_CommentList_ctl03_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1533182">3.&nbsp;re: 
  Beginning Visual C# 入门经典笔记</A> 
  <LI style="WORD-BREAK: break-all">不错,谢谢,呵呵 
  <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--qqqpppggg 
  <LI style="WORD-BREAK: break-all"><A 
  id=SingleColumn1__4ab3c8_CommentList_ctl04_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/articles/1186198.html#1533173">4.&nbsp;re: 
  Beginning Visual C# 入门经典笔记</A> 
  <LI style="WORD-BREAK: break-all">感谢,不过貌似ch3answer5的答案错了吧? 我的答案: //定义整型变量; int 
  num0, num1, num2, num3; //开始输入... 
  <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--samzero111 
  <LI style="WORD-BREAK: break-all"><A 
  id=SingleColumn1__4ab3c8_CommentList_ctl05_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/archive/2008/12/24/1361307.html#1497114">5.&nbsp;re: 
  Beginning Visual C# 入门经典笔记</A> 
  <LI style="WORD-BREAK: break-all">请问你有这本书吗？ 
  <LI style="MARGIN-RIGHT: 4px; TEXT-ALIGN: right">--Susan20090407 
</LI></UL></DIV>
<H3 class=catListTitle>阅读排行榜</H3>
<DIV class=RecentComment id=TopViewPosts>
<UL style="WORD-BREAK: break-all">
  <LI><A id=SingleColumn1_ctl06_TopList_ctl01_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/archive/2008/12/24/1361307.html">1.&nbsp;Beginning 
  Visual C# 入门经典笔记(412)</A> </LI></UL></DIV>
<H3 class=catListTitle>评论排行榜</H3>
<DIV class=RecentComment id=TopCommentsPosts>
<UL style="WORD-BREAK: break-all">
  <LI><A id=SingleColumn1_ctl07_TopList_ctl01_Hyperlink1 
  href="http://www.cnblogs.com/zhanghuabin/archive/2008/12/24/1361307.html">1.&nbsp;Beginning 
  Visual C# 入门经典笔记(1)</A> </LI></UL></DIV></DIV></DIV><!-- //右侧工具部分 -->
<DIV id=footer><!--done-->Copyright ©2010 张华斌 </DIV></DIV><!-- right ends -->
<DIV class=clear></DIV></DIV></FORM>
<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/shCore.js" 
type=text/javascript></SCRIPT>

<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/shLanguage.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
        try {
            SyntaxHighlighter.config.clipboardSwf = 'http://common.cnblogs.com/flash/clipboard.swf';
            SyntaxHighlighter.all();
        } catch (e) { }
    </SCRIPT>

<SCRIPT src="Beginning Visual C# 入门经典笔记 - 大漠孤烟 - 博客园_files/ShowHidden.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </SCRIPT>

<SCRIPT type=text/javascript>
        try {
            var pageTracker = _gat._getTracker("UA-476124-1");
            pageTracker._trackPageview();
        } catch (err) { }</SCRIPT>
</BODY></HTML>
